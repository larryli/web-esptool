{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?7e02","webpack:///./src/esptool/utils/unpack.ts","webpack:///./src/esptool/utils/serial.ts","webpack:///./src/esptool/utils/once.ts","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/esptool/utils/sleep.ts","webpack:///./src/esptool/utils/hex.ts","webpack:///./src/unpack/unzip.ts","webpack:///./src/esptool/ESPLoader.ts","webpack:///./src/App.vue?0ae1","webpack:///./src/esptool/ESP8266ROM.ts","webpack:///./src/esptool/ESP32ROM.ts","webpack:///./src/esptool/ESP32S2ROM.ts","webpack:///./src/esptool/ESP32C3ROM.ts","webpack:///./src/esptool/ESPTool.ts","webpack:///./src/esptool/index.ts","webpack:///./src/App.vue","webpack:///./src/App.vue?0ab4","webpack:///./src/App.vue?bff9","webpack:///./src/main.ts","webpack:///./src/esptool/utils/pack.ts","webpack:///./src/unpack/index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","jsonpScriptSrc","p","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","unpack","queue","Buffer","concat","packets","pi","qi","packet","alloc","from","open","serial","close","closeGracefully","set","options","update","getInfo","binding","boundedPort","once","emitter","evt","listener","ret","timer","removeListener","map","webpackContext","req","id","webpackContextResolve","code","keys","sleep","hex","v","bytes","toString","padStart","fromBuffer","readEntry","zip","onEntry","entry","onEnd","unzip","file","arrayBuffer","buffer","lazyEntries","openReadStream","entries","fileName","endsWith","stream","spoon","setImmediate","process","nextTick","deflate","ESPLoader","port","this","_on_data","on","_trace","TRACE","text","log","_dispatch","write","op","size","readUInt16LE","val","readUInt32LE","emit","chk","tries","hdr","writeUInt16LE","writeUInt32LE","out","_write","STATUS_BYTES_LENGTH","status_bytes","command","ESP_SYNC","esp32r0_delay","dtr","rts","usb_jtag_serial","_bootloader_reset_usb","_bootloader_reset","sync","attempts","info","usbProductId","USB_JTAG_SERIAL_PID","_connect_attempt","addr","ESP_READ_REG","offset","state","ESP_CHECKSUM_MAGIC","b","blocks","blocksize","ESP_MEM_BEGIN","check","seq","buf","ESP_MEM_DATA","_checksum","entrypoint","ESP_MEM_END","num_blocks","Math","floor","FLASH_WRITE_SIZE","erase_size","get_erase_size","ESP_FLASH_BEGIN","ESP_FLASH_DATA","reboot","ESP_FLASH_END","compsize","erase_blocks","write_size","IS_STUB","ESP_FLASH_DEFL_BEGIN","ESP_FLASH_DEFL_DATA","ESP_FLASH_DEFL_END","alignment","pad_character","pad_mod","arg","FLASH_SIZES","sizes","join","load_stub","stub","field","offs","ESP_RAM_BLOCK","mem_begin","from_offs","to_offs","mem_block","mem_finish","STUB_CLASS","baud","baudRate","ESP_CHANGE_BAUDRATE","address","args","image","BOOTLOADER_FLASH_OFFSET","magic","flash_mode","flash_freq","flash_size","ESP_IMAGE_MAGIC","warn","flashMode","flashFreq","flashSize","_parse_flash_size_arg","onProgress","partitions","_pad_image","_update_image_flash_params","COMPRESS","uncsize","level","flash_defl_begin","flash_begin","written","block","round","flash_defl_block","flash_block","index","blocks_written","blocks_total","read_reg","CHIP_DETECT_MAGIC_REG_ADDR","flash_defl_finish","flash_finish","_vm","_h","$createElement","_c","_self","attrs","_v","staticClass","progress","ref","handleFile","_s","_e","formatProgress","busy","start","_m","staticRenderFns","efuses","r0_4","r3_25","r3_26","r3_27","get_efuses","_get_flash_size","max_temp","chip_name","1","2","sectors_per_block","sector_size","FLASH_SECTOR_SIZE","num_sectors","start_sector","head_sectors","read_efuse","EFUSE_BLK0","word3","word5","DR_REG_SYSCON_BASE","apb_ctl_date","rev_bit0","rev_bit1","rev_bit2","get_pkg_version","pkg_version","get_chip_revision","chip_revision","rev3","single_core","0","4","5","6","startsWith","EFUSE_BASE","EFUSE_BLK1","Binding","path","isOpen","autoOpen","detector","connect","chip_magic_value","cls","CHIP_DETECT_MAGIC_VALUE","includes","loader","release","get_chip_description","chip_description","run_stub","flash","hard_reset","MAX_FILE_SIZE","esp","$message","success","imageSizes","imageSizesTotal","flashArgs","reduce","total","component","config","productionTip","use","render","h","$mount","pack","oi","di","findFlashArgs","dir","content","replace","split","trim","filter","match","parseInt","RegExp","$1"],"mappings":"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","file":"js/app.1621cf9e.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"stub_flasher_32\":\"stub_flasher_32\",\"stub_flasher_32c3\":\"stub_flasher_32c3\",\"stub_flasher_32s2\":\"stub_flasher_32s2\",\"stub_flasher_8266\":\"stub_flasher_8266\"}[chunkId]||chunkId) + \".\" + {\"stub_flasher_32\":\"3eb5fc61\",\"stub_flasher_32c3\":\"d9c35479\",\"stub_flasher_32s2\":\"191a653e\",\"stub_flasher_8266\":\"33027b7d\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","export default function unpack(queue: Buffer, data: Buffer): { queue: Buffer, packets: Buffer[] } {\n  queue = Buffer.concat([queue, data]);\n  const packets = [];\n  let pi = 0, qi = 0;\n  let packet = null;\n  while (qi < queue.length) {\n    if (queue[qi] == 0xC0) {\n      if (packet == null) {  // start\n        packet = Buffer.alloc(queue.length);\n      } else {  // end\n        packets.push(packet.slice(0, pi));\n        packet = null;\n        pi = 0;\n      }\n      qi += 1;\n    } else if (qi < queue.length - 1 && queue[qi] == 0xDB && queue[qi + 1] == 0xDC) {\n      if (packet != null) {\n        packet[pi] = 0xC0;\n        pi += 1;\n      }\n      qi += 2;\n    } else if (qi < queue.length - 1 && queue[qi] == 0xDB && queue[qi + 1] == 0xDD) {\n      if (packet != null) {\n        packet[pi] = 0xDB;\n        pi += 1;\n      }\n      qi += 2;\n    } else {\n      if (packet != null) {\n        packet[pi] = queue[qi];\n        pi += 1;\n      }\n      qi += 1;\n    }\n  }\n  if (packet != null) {\n    packet = Buffer.concat([Buffer.from([0xC0]), packet.slice(0, pi)]);\n  } else {\n    packet = Buffer.alloc(0);\n  }\n  return { queue: packet, packets };\n}\n","import SerialPort from '@serialport/stream';\nimport { promisify } from 'util';\n\nexport function open(serial: SerialPort): Promise<void> {\n  return promisify(serial.open.bind(serial))();\n}\n\nexport function close(serial: SerialPort): Promise<void> {\n  return promisify(serial.close.bind(serial))();\n}\n\nexport async function closeGracefully(serial: SerialPort): Promise<void> {\n  try {\n    await close(serial);\n  } catch (e) {\n    // ignored\n  }\n}\n\nexport function set(serial: SerialPort, options: SerialPort.SetOptions): Promise<void> {\n  return promisify(serial.set.bind(serial))(options);\n}\n\nexport function update(serial: SerialPort, options: SerialPort.UpdateOptions): Promise<void> {\n  return promisify(serial.update.bind(serial))(options);\n}\n\ninterface ISerialPortInfo {\n  usbVendorId?: number;\n  usbProductId?: number;\n}\n\ninterface ISerialPortBinding {\n  boundedPort?: {\n    getInfo(): Promise<ISerialPortInfo>;\n  };\n}\n\nexport async function getInfo(serial: SerialPort): Promise<ISerialPortInfo | null> {\n  const binding = serial.binding as ISerialPortBinding;\n  if (binding.boundedPort) {\n    return await binding.boundedPort.getInfo();\n  } else {\n    return null;\n  }\n}\n","import EventEmitter from 'events';\n\nexport default async function once<T>(emitter: EventEmitter, evt: string, timeout: number): Promise<T> {\n  return new Promise((resolve, reject) => {\n    const listener = (ret: T) => {\n      clearTimeout(timer);\n      resolve(ret);\n    };\n\n    const timer = setTimeout(() => {\n      emitter.removeListener(evt, listener);\n      reject(new Error('Timeout'));\n    }, timeout);\n\n    emitter.once(evt, listener);\n  });\n\n}\n","var map = {\n\t\"./af\": \"2bfb\",\n\t\"./af.js\": \"2bfb\",\n\t\"./ar\": \"8e73\",\n\t\"./ar-dz\": \"a356\",\n\t\"./ar-dz.js\": \"a356\",\n\t\"./ar-kw\": \"423e\",\n\t\"./ar-kw.js\": \"423e\",\n\t\"./ar-ly\": \"1cfd\",\n\t\"./ar-ly.js\": \"1cfd\",\n\t\"./ar-ma\": \"0a84\",\n\t\"./ar-ma.js\": \"0a84\",\n\t\"./ar-sa\": \"8230\",\n\t\"./ar-sa.js\": \"8230\",\n\t\"./ar-tn\": \"6d83\",\n\t\"./ar-tn.js\": \"6d83\",\n\t\"./ar.js\": \"8e73\",\n\t\"./az\": \"485c\",\n\t\"./az.js\": \"485c\",\n\t\"./be\": \"1fc1\",\n\t\"./be.js\": \"1fc1\",\n\t\"./bg\": \"84aa\",\n\t\"./bg.js\": \"84aa\",\n\t\"./bm\": \"a7fa\",\n\t\"./bm.js\": \"a7fa\",\n\t\"./bn\": \"9043\",\n\t\"./bn-bd\": \"9686\",\n\t\"./bn-bd.js\": \"9686\",\n\t\"./bn.js\": \"9043\",\n\t\"./bo\": \"d26a\",\n\t\"./bo.js\": \"d26a\",\n\t\"./br\": \"6887\",\n\t\"./br.js\": \"6887\",\n\t\"./bs\": \"2554\",\n\t\"./bs.js\": \"2554\",\n\t\"./ca\": \"d716\",\n\t\"./ca.js\": \"d716\",\n\t\"./cs\": \"3c0d\",\n\t\"./cs.js\": \"3c0d\",\n\t\"./cv\": \"03ec\",\n\t\"./cv.js\": \"03ec\",\n\t\"./cy\": \"9797\",\n\t\"./cy.js\": \"9797\",\n\t\"./da\": \"0f14\",\n\t\"./da.js\": \"0f14\",\n\t\"./de\": \"b469\",\n\t\"./de-at\": \"b3eb\",\n\t\"./de-at.js\": \"b3eb\",\n\t\"./de-ch\": \"bb71\",\n\t\"./de-ch.js\": \"bb71\",\n\t\"./de.js\": \"b469\",\n\t\"./dv\": \"598a\",\n\t\"./dv.js\": \"598a\",\n\t\"./el\": \"8d47\",\n\t\"./el.js\": \"8d47\",\n\t\"./en-au\": \"0e6b\",\n\t\"./en-au.js\": \"0e6b\",\n\t\"./en-ca\": \"3886\",\n\t\"./en-ca.js\": \"3886\",\n\t\"./en-gb\": \"39a6\",\n\t\"./en-gb.js\": \"39a6\",\n\t\"./en-ie\": \"e1d3\",\n\t\"./en-ie.js\": \"e1d3\",\n\t\"./en-il\": \"7333\",\n\t\"./en-il.js\": \"7333\",\n\t\"./en-in\": \"ec2e\",\n\t\"./en-in.js\": \"ec2e\",\n\t\"./en-nz\": \"6f50\",\n\t\"./en-nz.js\": \"6f50\",\n\t\"./en-sg\": \"b7e9\",\n\t\"./en-sg.js\": \"b7e9\",\n\t\"./eo\": \"65db\",\n\t\"./eo.js\": \"65db\",\n\t\"./es\": \"898b\",\n\t\"./es-do\": \"0a3c\",\n\t\"./es-do.js\": \"0a3c\",\n\t\"./es-mx\": \"b5b7\",\n\t\"./es-mx.js\": \"b5b7\",\n\t\"./es-us\": \"55c9\",\n\t\"./es-us.js\": \"55c9\",\n\t\"./es.js\": \"898b\",\n\t\"./et\": \"ec18\",\n\t\"./et.js\": \"ec18\",\n\t\"./eu\": \"0ff2\",\n\t\"./eu.js\": \"0ff2\",\n\t\"./fa\": \"8df4\",\n\t\"./fa.js\": \"8df4\",\n\t\"./fi\": \"81e9\",\n\t\"./fi.js\": \"81e9\",\n\t\"./fil\": \"d69a\",\n\t\"./fil.js\": \"d69a\",\n\t\"./fo\": \"0721\",\n\t\"./fo.js\": \"0721\",\n\t\"./fr\": \"9f26\",\n\t\"./fr-ca\": \"d9f8\",\n\t\"./fr-ca.js\": \"d9f8\",\n\t\"./fr-ch\": \"0e49\",\n\t\"./fr-ch.js\": \"0e49\",\n\t\"./fr.js\": \"9f26\",\n\t\"./fy\": \"7118\",\n\t\"./fy.js\": \"7118\",\n\t\"./ga\": \"5120\",\n\t\"./ga.js\": \"5120\",\n\t\"./gd\": \"f6b4\",\n\t\"./gd.js\": \"f6b4\",\n\t\"./gl\": \"8840\",\n\t\"./gl.js\": \"8840\",\n\t\"./gom-deva\": \"aaf2\",\n\t\"./gom-deva.js\": \"aaf2\",\n\t\"./gom-latn\": \"0caa\",\n\t\"./gom-latn.js\": \"0caa\",\n\t\"./gu\": \"e0c5\",\n\t\"./gu.js\": \"e0c5\",\n\t\"./he\": \"c7aa\",\n\t\"./he.js\": \"c7aa\",\n\t\"./hi\": \"dc4d\",\n\t\"./hi.js\": \"dc4d\",\n\t\"./hr\": \"4ba9\",\n\t\"./hr.js\": \"4ba9\",\n\t\"./hu\": \"5b14\",\n\t\"./hu.js\": \"5b14\",\n\t\"./hy-am\": \"d6b6\",\n\t\"./hy-am.js\": \"d6b6\",\n\t\"./id\": \"5038\",\n\t\"./id.js\": \"5038\",\n\t\"./is\": \"0558\",\n\t\"./is.js\": \"0558\",\n\t\"./it\": \"6e98\",\n\t\"./it-ch\": \"6f12\",\n\t\"./it-ch.js\": \"6f12\",\n\t\"./it.js\": \"6e98\",\n\t\"./ja\": \"079e\",\n\t\"./ja.js\": \"079e\",\n\t\"./jv\": \"b540\",\n\t\"./jv.js\": \"b540\",\n\t\"./ka\": \"201b\",\n\t\"./ka.js\": \"201b\",\n\t\"./kk\": \"6d79\",\n\t\"./kk.js\": \"6d79\",\n\t\"./km\": \"e81d\",\n\t\"./km.js\": \"e81d\",\n\t\"./kn\": \"3e92\",\n\t\"./kn.js\": \"3e92\",\n\t\"./ko\": \"22f8\",\n\t\"./ko.js\": \"22f8\",\n\t\"./ku\": \"2421\",\n\t\"./ku.js\": \"2421\",\n\t\"./ky\": \"9609\",\n\t\"./ky.js\": \"9609\",\n\t\"./lb\": \"440c\",\n\t\"./lb.js\": \"440c\",\n\t\"./lo\": \"b29d\",\n\t\"./lo.js\": \"b29d\",\n\t\"./lt\": \"26f9\",\n\t\"./lt.js\": \"26f9\",\n\t\"./lv\": \"b97c\",\n\t\"./lv.js\": \"b97c\",\n\t\"./me\": \"293c\",\n\t\"./me.js\": \"293c\",\n\t\"./mi\": \"688b\",\n\t\"./mi.js\": \"688b\",\n\t\"./mk\": \"6909\",\n\t\"./mk.js\": \"6909\",\n\t\"./ml\": \"02fb\",\n\t\"./ml.js\": \"02fb\",\n\t\"./mn\": \"958b\",\n\t\"./mn.js\": \"958b\",\n\t\"./mr\": \"39bd\",\n\t\"./mr.js\": \"39bd\",\n\t\"./ms\": \"ebe4\",\n\t\"./ms-my\": \"6403\",\n\t\"./ms-my.js\": \"6403\",\n\t\"./ms.js\": \"ebe4\",\n\t\"./mt\": \"1b45\",\n\t\"./mt.js\": \"1b45\",\n\t\"./my\": \"8689\",\n\t\"./my.js\": \"8689\",\n\t\"./nb\": \"6ce3\",\n\t\"./nb.js\": \"6ce3\",\n\t\"./ne\": \"3a39\",\n\t\"./ne.js\": \"3a39\",\n\t\"./nl\": \"facd\",\n\t\"./nl-be\": \"db29\",\n\t\"./nl-be.js\": \"db29\",\n\t\"./nl.js\": \"facd\",\n\t\"./nn\": \"b84c\",\n\t\"./nn.js\": \"b84c\",\n\t\"./oc-lnc\": \"167b\",\n\t\"./oc-lnc.js\": \"167b\",\n\t\"./pa-in\": \"f3ff\",\n\t\"./pa-in.js\": \"f3ff\",\n\t\"./pl\": \"8d57\",\n\t\"./pl.js\": \"8d57\",\n\t\"./pt\": \"f260\",\n\t\"./pt-br\": \"d2d4\",\n\t\"./pt-br.js\": \"d2d4\",\n\t\"./pt.js\": \"f260\",\n\t\"./ro\": \"972c\",\n\t\"./ro.js\": \"972c\",\n\t\"./ru\": \"957c\",\n\t\"./ru.js\": \"957c\",\n\t\"./sd\": \"6784\",\n\t\"./sd.js\": \"6784\",\n\t\"./se\": \"ffff\",\n\t\"./se.js\": \"ffff\",\n\t\"./si\": \"eda5\",\n\t\"./si.js\": \"eda5\",\n\t\"./sk\": \"7be6\",\n\t\"./sk.js\": \"7be6\",\n\t\"./sl\": \"8155\",\n\t\"./sl.js\": \"8155\",\n\t\"./sq\": \"c8f3\",\n\t\"./sq.js\": \"c8f3\",\n\t\"./sr\": \"cf1e\",\n\t\"./sr-cyrl\": \"13e9\",\n\t\"./sr-cyrl.js\": \"13e9\",\n\t\"./sr.js\": \"cf1e\",\n\t\"./ss\": \"52bd\",\n\t\"./ss.js\": \"52bd\",\n\t\"./sv\": \"5fbd\",\n\t\"./sv.js\": \"5fbd\",\n\t\"./sw\": \"74dc\",\n\t\"./sw.js\": \"74dc\",\n\t\"./ta\": \"3de5\",\n\t\"./ta.js\": \"3de5\",\n\t\"./te\": \"5cbb\",\n\t\"./te.js\": \"5cbb\",\n\t\"./tet\": \"576c\",\n\t\"./tet.js\": \"576c\",\n\t\"./tg\": \"3b1b\",\n\t\"./tg.js\": \"3b1b\",\n\t\"./th\": \"10e8\",\n\t\"./th.js\": \"10e8\",\n\t\"./tk\": \"5aff\",\n\t\"./tk.js\": \"5aff\",\n\t\"./tl-ph\": \"0f38\",\n\t\"./tl-ph.js\": \"0f38\",\n\t\"./tlh\": \"cf75\",\n\t\"./tlh.js\": \"cf75\",\n\t\"./tr\": \"0e81\",\n\t\"./tr.js\": \"0e81\",\n\t\"./tzl\": \"cf51\",\n\t\"./tzl.js\": \"cf51\",\n\t\"./tzm\": \"c109\",\n\t\"./tzm-latn\": \"b53d\",\n\t\"./tzm-latn.js\": \"b53d\",\n\t\"./tzm.js\": \"c109\",\n\t\"./ug-cn\": \"6117\",\n\t\"./ug-cn.js\": \"6117\",\n\t\"./uk\": \"ada2\",\n\t\"./uk.js\": \"ada2\",\n\t\"./ur\": \"5294\",\n\t\"./ur.js\": \"5294\",\n\t\"./uz\": \"2e8c\",\n\t\"./uz-latn\": \"010e\",\n\t\"./uz-latn.js\": \"010e\",\n\t\"./uz.js\": \"2e8c\",\n\t\"./vi\": \"2921\",\n\t\"./vi.js\": \"2921\",\n\t\"./x-pseudo\": \"fd7e\",\n\t\"./x-pseudo.js\": \"fd7e\",\n\t\"./yo\": \"7f33\",\n\t\"./yo.js\": \"7f33\",\n\t\"./zh-cn\": \"5c3a\",\n\t\"./zh-cn.js\": \"5c3a\",\n\t\"./zh-hk\": \"49ab\",\n\t\"./zh-hk.js\": \"49ab\",\n\t\"./zh-mo\": \"3a6c\",\n\t\"./zh-mo.js\": \"3a6c\",\n\t\"./zh-tw\": \"90ea\",\n\t\"./zh-tw.js\": \"90ea\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"4678\";","export default function sleep(timeout: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, timeout));\n}\n","export default function hex(v: number, bytes = 1): string {\n  return `0x${v.toString(16).padStart(bytes * 2, '0')}`;\n}\n","import { promisify } from 'util';\nimport yauzl, { Entry, Options, ZipFile } from 'yauzl';\nimport pond from 'pond';\n\nconst fromBuffer = promisify(yauzl.fromBuffer) as\n  (buffer: Buffer, options?: Options) => Promise<ZipFile>;\n\n// Hack yauzl\n// @ts-ignore\nwindow.setImmediate = process.nextTick;\n\nfunction readEntry(zip: ZipFile): Promise<Entry | null> {\n  return new Promise((resolve) => {\n    const onEntry = (entry: Entry) => {\n      zip.removeListener('end', onEnd);\n      resolve(entry);\n    };\n\n    const onEnd = () => {\n      zip.removeListener('entry', onEntry);\n      resolve(null);\n    };\n\n    zip.once('entry', onEntry);\n    zip.once('end', onEnd);\n    zip.readEntry();\n  });\n}\n\nexport default async function unzip(file: File): Promise<Record<string, Buffer>> {\n  const buffer = Buffer.from(await file.arrayBuffer());\n  const zip = await fromBuffer(buffer, { lazyEntries: true });\n  const openReadStream = promisify(zip.openReadStream.bind(zip));\n\n  const entries: Record<string, Buffer> = {};\n  let entry;\n  while ((entry = await readEntry(zip)) != null) {\n    if (entry.fileName.endsWith('/')) {\n      continue;\n    }\n\n    const stream = await openReadStream(entry);\n    entries[`/${entry.fileName}`] = await pond(stream).spoon()!;\n  }\n\n  return entries;\n}\n","import { promisify } from 'util';\nimport zlib from 'zlib';\nimport SerialPort from '@serialport/stream';\nimport hex from './utils/hex';\nimport once from './utils/once';\nimport sleep from './utils/sleep';\nimport pack from './utils/pack';\nimport unpack from './utils/unpack';\nimport { set, update, getInfo } from './utils/serial';\nimport { IFlashArgs } from './';\n\nconst unzip = promisify(zlib.unzip);\nconst deflate = promisify(zlib.deflate);\n\ninterface IResponse {\n  val: number;\n  data: Buffer;\n}\n\nexport type IStub = Record<string, string | number>;\n\nexport interface IFlashProgress {\n  index: number;\n  blocks_written: number;\n  blocks_total: number;\n}\n\nexport default class ESPLoader {\n\n  static TRACE = false;\n\n  // This ROM address has a different value on each chip model\n  static CHIP_DETECT_MAGIC_REG_ADDR = 0x40001000;\n\n  CHIP_NAME = 'Espressif device';\n  IS_STUB = false;\n\n  COMPRESS = true;\n\n  // Commands supported by ESP8266 ROM bootloader\n  ESP_FLASH_BEGIN = 0x02;\n  ESP_FLASH_DATA = 0x03;\n  ESP_FLASH_END = 0x04;\n  ESP_MEM_BEGIN = 0x05;\n  ESP_MEM_END = 0x06;\n  ESP_MEM_DATA = 0x07;\n  ESP_SYNC = 0x08;\n  ESP_READ_REG = 0x0A;\n  ESP_FLASH_DEFL_BEGIN = 0x10;\n  ESP_FLASH_DEFL_DATA = 0x11;\n  ESP_FLASH_DEFL_END = 0x12;\n\n  // Some comands supported by ESP32 ROM bootloader(or -8266 w / stub)\n  ESP_SPI_ATTACH = 0x0D;\n  ESP_CHANGE_BAUDRATE = 0x0F;\n\n  // Maximum block sized for RAM and Flash writes, respectively.\n  ESP_RAM_BLOCK = 0x1800;\n\n  FLASH_WRITE_SIZE = 0x400;\n\n  //First byte of the application image\n  ESP_IMAGE_MAGIC = 0xe9;\n\n  // Initial state for the checksum routine\n  ESP_CHECKSUM_MAGIC = 0xef;\n\n  // Flash sector size, minimum unit of erase.\n  FLASH_SECTOR_SIZE = 0x1000;\n\n  // The number of bytes in the UART response that signify command status\n  STATUS_BYTES_LENGTH = 2;\n\n  BOOTLOADER_FLASH_OFFSET = 0;\n  FLASH_SIZES: Record<string, number> = {};\n\n  // Device PIDs\n  USB_JTAG_SERIAL_PID = 0x1001;\n\n  port: SerialPort;\n  queue: Buffer;\n\n  usb_jtag_serial = false;\n\n  STUB_CLASS?: { new(port: SerialPort): ESPLoader };\n\n  private _trace: (text?: string) => void;\n\n  constructor(port: SerialPort) {\n    this._on_data = this._on_data.bind(this);\n\n    this.port = port;\n    this.port.on('data', this._on_data);\n\n    this.queue = Buffer.alloc(0);\n\n    this._trace = ESPLoader.TRACE\n      ? (text) => console.log(`%cTRACE ${text}`, 'color: darkcyan')\n      : () => null;\n  }\n\n  release(): void {\n    this.port.removeListener('data', this._on_data);\n  }\n\n  _on_data(data: Buffer): void {\n    this._trace(`Read ${data.length} bytes: ${data.toString('hex')}`);\n    const { queue, packets } = unpack(this.queue, data);\n    this.queue = queue;\n    for (const packet of packets) {\n      this._dispatch(packet);\n    }\n  }\n\n  _write(data: Buffer): void {\n    data = pack(data);\n    this._trace(`Write ${data.length} bytes: ${data.toString('hex')}`);\n    this.port.write(data);\n  }\n\n  _dispatch(data: Buffer): void {\n    if (data.length < 8) return;\n    if (data[0] != 0x01) return;\n    const op = data[1];\n    const size = data.readUInt16LE(2);\n    const val = data.readUInt32LE(4);\n    data = data.slice(8);\n\n    this._trace(`< res op=${hex(op)} len=${size} val=${val} data=${data.toString('hex')}`);\n\n    this.port.emit(`res:${op}`, { val, data } as IResponse);\n  }\n\n  async command(op: number, data: Buffer, chk = 0, timeout = 500, tries = 5): Promise<IResponse> {\n    this._trace(`> req op=${hex(op)} len=${data.length} data=${data.toString('hex')}`);\n\n    const hdr = Buffer.alloc(8);\n    hdr[0] = 0x00;\n    hdr[1] = op;\n    hdr.writeUInt16LE(data.length, 2);\n    hdr.writeUInt32LE(chk, 4);\n    const out = Buffer.concat([hdr, data]);\n    for (let i = 0; i < tries; i++) {\n      try {\n        this._write(out);\n        return await once(this.port, `res:${op}`, timeout) as IResponse;\n      } catch (e) {\n        // ignored\n      }\n    }\n    throw new Error('Timeout waiting for command response');\n  }\n\n  check({ val, data }: IResponse): number | Buffer {\n    if (data.length < this.STATUS_BYTES_LENGTH) {\n      throw new Error(`Only got ${data.length} byte status response.`);\n    }\n\n    const status_bytes = data.slice(0, this.STATUS_BYTES_LENGTH);\n    if (status_bytes[0] != 0) {\n      throw new Error(`Command failed: ${status_bytes.toString('hex')}`);\n    }\n\n    // if we had more data than just the status bytes, return it as the result\n    // (this is used by the md5sum command, maybe other commands ?)\n    if (data.length > this.STATUS_BYTES_LENGTH) {\n      return data.slice(this.STATUS_BYTES_LENGTH);\n    } else {\n      // otherwise, just return the 'val' field which comes from the reply header(this is used by read_reg)\n      return val;\n    }\n  }\n\n  async sync(): Promise<number> {\n    const data = Buffer.concat([\n      Buffer.from([0x07, 0x07, 0x12, 0x20]),\n      Buffer.alloc(32, 0x55),\n    ]);\n    const { val } = await this.command(this.ESP_SYNC, data);\n    return val;\n  }\n\n  async _bootloader_reset(esp32r0_delay = false): Promise<void> {\n    // esp32r0_delay is a workaround for bugs with the most common auto reset\n    // circuit and Windows, if the EN pin on the dev board does not have\n    // enough capacitance.\n    //\n    // Newer dev boards shouldn't have this problem (higher value capacitor\n    // on the EN pin), and ESP32 revision 1 can't use this workaround as it\n    // relies on a silicon bug.\n    //\n    // Details: https://github.com/espressif/esptool/issues/136\n\n    // IO0 = HIGH\n    // EN = LOW, chip in reset\n    await set(this.port, { dtr: false, rts: true });\n\n    await sleep(100);\n    if (esp32r0_delay) {\n      // Some chips are more likely to trigger the esp32r0\n      // watchdog reset silicon bug if they're held with EN=LOW\n      // for a longer period\n      await sleep(1200);\n    }\n\n    // IO0 = LOW\n    // EN = HIGH, chip out of reset\n    await set(this.port, { dtr: true, rts: false });\n\n    if (esp32r0_delay) {\n      // Sleep longer after reset.\n      // This workaround only works on revision 0 ESP32 chips,\n      // it exploits a silicon bug spurious watchdog reset.\n      await sleep(400);  // allow watchdog reset to occur\n    }\n    await sleep(50);\n\n    // IO0 = HIGH, done\n    await set(this.port, { dtr: false, rts: false });\n  }\n\n  async _bootloader_reset_usb(): Promise<void> {\n    // Set IO0\n    await set(this.port, { dtr: true, rts: false });\n\n    await sleep(100);\n\n    // Reset. Note dtr/rts calls inverted so we go through (1,1) instead of (0,0)\n    await set(this.port, { dtr: false, rts: true });\n\n    await sleep(100);\n\n    // Done\n    await set(this.port, { dtr: false, rts: false });\n  }\n\n  async _connect_attempt(esp32r0_delay = false): Promise<boolean> {\n    if (this.usb_jtag_serial) {\n      await this._bootloader_reset_usb();\n    } else {\n      await this._bootloader_reset(esp32r0_delay);\n    }\n\n    for (let i = 0; i < 5; i++) {\n      try {\n        await this.sync();\n        return true;\n      } catch (e) {\n        await sleep(50);\n      }\n    }\n\n    return false;\n  }\n\n  async connect(attempts = 7): Promise<boolean> {\n    const info = await getInfo(this.port);\n    if (info && info.usbProductId == this.USB_JTAG_SERIAL_PID) {\n      this.usb_jtag_serial = true;\n      console.log('Detected integrated USB Serial/JTAG');\n    }\n\n    for (let i = 0; i < attempts; i++) {\n      try {\n        if (await this._connect_attempt(false)) {\n          return true;\n        } else if (await this._connect_attempt(true)) {\n          return true;\n        }\n      } catch (e) {\n        // ignored\n      }\n    }\n\n    return false;\n  }\n\n  async read_reg(addr: number): Promise<number> {\n    const data = Buffer.alloc(4);\n    data.writeUInt32LE(addr, 0);\n    const { val } = await this.command(this.ESP_READ_REG, data);\n    return val;\n  }\n\n  async get_chip_description(): Promise<string> {\n    throw new Error('Not supported');\n  }\n\n  get_erase_size(offset: number, size: number): number {\n    return size;\n  }\n\n  _checksum(data: Buffer): number {\n    let state = this.ESP_CHECKSUM_MAGIC;\n    for (const b of data) {\n      state ^= b;\n    }\n    return state;\n  }\n\n  async mem_begin(size: number, blocks: number, blocksize: number, offset: number): Promise<void> {\n    const data = Buffer.alloc(16);\n    data.writeUInt32LE(size, 0);\n    data.writeUInt32LE(blocks, 4);\n    data.writeUInt32LE(blocksize, 8);\n    data.writeUInt32LE(offset, 12);\n\n    this.check(await this.command(this.ESP_MEM_BEGIN, data, 0, 5000, 1));\n  }\n\n  async mem_block(data: Buffer, seq: number): Promise<void> {\n    const hdr = Buffer.alloc(16);\n    hdr.writeUInt32LE(data.length, 0);\n    hdr.writeUInt32LE(seq, 4);\n    hdr.writeUInt32LE(0, 8);\n    hdr.writeUInt32LE(0, 12);\n\n    const buf = Buffer.concat([hdr, data]);\n    this.check(await this.command(this.ESP_MEM_DATA, buf, this._checksum(data), 5000, 1));\n  }\n\n  async mem_finish(entrypoint = 0): Promise<void> {\n    const data = Buffer.alloc(8);\n    data.writeUInt32LE(entrypoint == 0 ? 1 : 0, 0);\n    data.writeUInt32LE(entrypoint, 4);\n    this.check(await this.command(this.ESP_MEM_END, data, 0, 50, 1));\n  }\n\n  async flash_begin(size: number, offset: number): Promise<number> {\n    const num_blocks = Math.floor((size + this.FLASH_WRITE_SIZE - 1) / this.FLASH_WRITE_SIZE);\n    const erase_size = this.get_erase_size(offset, size);\n\n    const data = Buffer.alloc(16);\n    data.writeUInt32LE(erase_size, 0);\n    data.writeUInt32LE(num_blocks, 4);\n    data.writeUInt32LE(this.FLASH_WRITE_SIZE, 8);\n    data.writeUInt32LE(offset, 12);\n\n    this.check(await this.command(this.ESP_FLASH_BEGIN, data, 0, 5000, 1));\n\n    return num_blocks;\n  }\n\n  async flash_block(data: Buffer, seq: number): Promise<void> {\n    const hdr = Buffer.alloc(16);\n    hdr.writeUInt32LE(data.length, 0);\n    hdr.writeUInt32LE(seq, 4);\n    hdr.writeUInt32LE(0, 8);\n    hdr.writeUInt32LE(0, 12);\n\n    const buf = Buffer.concat([hdr, data]);\n    this.check(await this.command(this.ESP_FLASH_DATA, buf, this._checksum(data), 5000, 1));\n  }\n\n  async flash_finish(reboot = false): Promise<void> {\n    const data = Buffer.alloc(4);\n    data.writeUInt32LE(reboot ? 0 : 1, 0);\n    this.check(await this.command(this.ESP_FLASH_END, data));\n  }\n\n  async flash_defl_begin(size: number, compsize: number, offset: number): Promise<number> {\n    const num_blocks = Math.floor((compsize + this.FLASH_WRITE_SIZE - 1) / this.FLASH_WRITE_SIZE);\n    const erase_blocks = Math.floor((size + this.FLASH_WRITE_SIZE - 1) / this.FLASH_WRITE_SIZE);\n\n    const write_size = this.IS_STUB\n      ? size  // stub expects number of bytes here, manages erasing internally\n      : erase_blocks * this.FLASH_WRITE_SIZE; // ROM expects rounded up to erase block size\n\n    console.log(`Comporessed ${size} bytes to ${compsize}...`);\n\n    const data = Buffer.alloc(16);\n    data.writeUInt32LE(write_size, 0);\n    data.writeUInt32LE(num_blocks, 4);\n    data.writeUInt32LE(this.FLASH_WRITE_SIZE, 8);\n    data.writeUInt32LE(offset, 12);\n\n    this.check(await this.command(this.ESP_FLASH_DEFL_BEGIN, data, 0, 5000, 1));\n\n    return num_blocks;\n  }\n\n  async flash_defl_block(data: Buffer, seq: number): Promise<void> {\n    const hdr = Buffer.alloc(16);\n    hdr.writeUInt32LE(data.length, 0);\n    hdr.writeUInt32LE(seq, 4);\n    hdr.writeUInt32LE(0, 8);\n    hdr.writeUInt32LE(0, 12);\n\n    const buf = Buffer.concat([hdr, data]);\n    this.check(await this.command(this.ESP_FLASH_DEFL_DATA, buf, this._checksum(data), 5000, 1));\n  }\n\n  async flash_defl_finish(reboot = false): Promise<void> {\n    const data = Buffer.alloc(4);\n    data.writeUInt32LE(reboot ? 0 : 1, 0);\n    this.check(await this.command(this.ESP_FLASH_DEFL_END, data));\n  }\n\n  _pad_image(data: Buffer, alignment: number, pad_character = 0xFF): Buffer {\n    const pad_mod = data.length % alignment;\n    if (pad_mod != 0) {\n      data = Buffer.concat([data, Buffer.alloc(pad_mod, pad_character)]);\n    }\n    return data;\n  }\n\n  _parse_flash_size_arg(arg: string): number {\n    if (this.FLASH_SIZES[arg]) {\n      return this.FLASH_SIZES[arg];\n    } else {\n      const sizes = Object.keys(this.FLASH_SIZES).join(', ');\n      throw new Error(`Flash size '${arg}' is not supported by this chip type. Supported sizes: ${sizes}`);\n    }\n  }\n\n  async load_stub(): Promise<IStub | null> {\n    return null;\n  }\n\n  async run_stub(): Promise<ESPLoader | null> {\n    const stub = await this.load_stub();\n    if (!stub) {\n      return null;\n    }\n\n    console.log('Uploading stub...');\n    for (const field of ['text', 'data']) {\n      if (!stub[field]) continue;\n      const offs = stub[`${field}_start`] as number;\n      const code = await unzip(Buffer.from(stub[field] as string, 'base64'));\n      const blocks = Math.floor((code.length + this.ESP_RAM_BLOCK - 1) / this.ESP_RAM_BLOCK);\n      await this.mem_begin(code.length, blocks, this.ESP_RAM_BLOCK, offs);\n      for (let seq = 0; seq < blocks; seq++) {\n        const from_offs = seq * this.ESP_RAM_BLOCK;\n        const to_offs = from_offs + this.ESP_RAM_BLOCK;\n        await this.mem_block(code.slice(from_offs, to_offs), seq);\n      }\n    }\n\n    console.log('Running stub...');\n    await this.mem_finish(stub['entry'] as number);\n    await sleep(500);\n\n    console.log('Stub running...');\n    return new this.STUB_CLASS!(this.port);\n  }\n\n  async change_baud(baud: number): Promise<void> {\n    console.log(`Changing baud rate to ${baud}`);\n    const data = Buffer.alloc(8);\n    data.writeUInt32LE(baud, 0);\n    data.writeUInt32LE(this.IS_STUB ? this.port.baudRate : 0, 4);  // stub takes the new baud rate and the old one\n    await this.command(this.ESP_CHANGE_BAUDRATE, data);\n    console.log('Changed.');\n    await update(this.port, { baudRate: baud });\n    await sleep(50);  // get rid of crap sent during baud rate change\n  }\n\n  _update_image_flash_params(address: number, args: IFlashArgs, image: Buffer): Buffer {\n    if (address != this.BOOTLOADER_FLASH_OFFSET) {\n      return image;  // not flashing bootloader offset, so don't modify this\n    }\n\n    const magic = image[0];\n    let flash_mode = image[2];\n    let flash_freq = image[3] & 0x0F;\n    let flash_size = image[3] & 0xF0;\n\n    if (magic != this.ESP_IMAGE_MAGIC) {\n      console.warn(`Warning: Image file at ${address} doesn't look like an image file, so not changing any flash settings.`);\n      return image;\n    }\n\n    // TODO: verify bootloader image\n\n    if (args.flashMode && args.flashMode != 'keep') {\n      flash_mode = { 'qio': 0, 'qout': 1, 'dio': 2, 'dout': 3 }[args.flashMode]!;\n    }\n\n    if (args.flashFreq && args.flashFreq != 'keep') {\n      flash_freq = { '40m': 0, '26m': 1, '20m': 2, '80m': 0xf }[args.flashFreq]!;\n    }\n\n    if (args.flashSize && args.flashSize != 'keep') {\n      flash_size = this._parse_flash_size_arg(args.flashSize);\n    }\n\n    image[2] = flash_mode;\n    image[3] = flash_freq | flash_size;\n\n    return image;\n  }\n\n  async flash(args: IFlashArgs, onProgress: (progress: IFlashProgress) => void): Promise<void> {\n    for (let i = 0; i < args.partitions.length; i++) {\n      const { address } = args.partitions[i];\n      let { image } = args.partitions[i];\n      console.log(`Part ${i}: address=${hex(address, 4)} size=${image.length}`);\n\n      image = this._pad_image(image, 4);\n      if (image.length == 0) {\n        console.warn(`Skipped empty part ${i} address=${hex(address, 4)}`);\n        continue;\n      }\n\n      image = this._update_image_flash_params(address, args, image);\n\n      let blocks;\n      if (this.COMPRESS) {\n        const uncsize = image.length;\n        image = await deflate(image, { level: 9 });\n        blocks = await this.flash_defl_begin(uncsize, image.length, address);\n      } else {\n        blocks = await this.flash_begin(image.length, address);\n      }\n\n      let seq = 0;\n      let written = 0;\n      while (image.length > 0) {\n        const block = image.slice(0, this.FLASH_WRITE_SIZE);\n        if (this.COMPRESS) {\n          console.log(`Writing... (${Math.round((seq + 1) / blocks * 100)}%)`);\n          await this.flash_defl_block(block, seq);\n        } else {\n          console.log(`Writing at ${hex(address + written, 4)}... (${Math.round((seq + 1) / blocks * 100)}%)`);\n          await this.flash_block(block, seq);\n        }\n        image = image.slice(this.FLASH_WRITE_SIZE);\n        seq += 1\n        written += block.length;\n        onProgress({ index: i, blocks_written: seq + 1, blocks_total: blocks });\n      }\n\n      if (this.IS_STUB) {\n        // Stub only writes each block to flash after 'ack'ing the receive, so do a final dummy operation which will\n        // not be 'ack'ed until the last block has actually been written out to flash\n        await this.read_reg(ESPLoader.CHIP_DETECT_MAGIC_REG_ADDR);\n      }\n\n      console.log(`Wrote ${written} bytes`);\n    }\n\n    console.log('Leaving...');\n\n    if (this.IS_STUB) {\n      // skip sending flash_finish to ROM loader here,\n      // as it causes the loader to exit and run user code\n      await this.flash_begin(0, 0);\n      if (this.COMPRESS) {\n        await this.flash_defl_finish(false);\n      } else {\n        await this.flash_finish(false);\n      }\n    }\n  }\n\n  async hard_reset(): Promise<void> {\n    await set(this.port, { dtr: false, rts: true });  // EN->LOW\n    await sleep(100);\n    await set(this.port, { dtr: false, rts: false });\n  }\n\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{attrs:{\"id\":\"app\"}},[_c('h1',[_vm._v(\"Web ESPTool\")]),_c('div',{staticClass:\"author\"},[_vm._v(\"by XiNGRZ\")]),(_vm.progress == null)?_c('div',{staticClass:\"main upload\"},[_c('a-upload-dragger',{staticClass:\"uploader\",attrs:{\"accept\":\".zip\",\"showUploadList\":false,\"customRequest\":function (ref) {\n\tvar file = ref.file;\n\n\treturn _vm.handleFile(file);\n}}},[_c('p',{staticClass:\"ant-upload-drag-icon\"},[_c('a-icon',{attrs:{\"type\":_vm.file ? 'file-zip' : 'inbox'}})],1),(_vm.file)?_c('p',{staticClass:\"ant-upload-text file\"},[_vm._v(_vm._s(_vm.file.name))]):_c('p',{staticClass:\"ant-upload-text\"},[_vm._v(\"点击选择或将固件包拖放到此处\")])])],1):_vm._e(),(_vm.progress != null)?_c('div',{staticClass:\"main progress\"},[_c('a-progress',{attrs:{\"type\":\"circle\",\"width\":150,\"strokeWidth\":4,\"percent\":_vm.progress,\"status\":_vm.progress >= 100 ? 'success' : 'active',\"format\":_vm.formatProgress}})],1):_vm._e(),_c('div',{staticClass:\"buttons\"},[_c('a-button',{attrs:{\"size\":\"large\",\"type\":\"primary\",\"disabled\":_vm.busy || !_vm.file},on:{\"click\":_vm.start}},[_vm._v(\"开始烧录\")])],1)]),_vm._m(0)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"footer\"},[_c('div',[_vm._v(\"Copyright © 2021 XiNGRZ\")]),_c('div',[_c('a',{attrs:{\"href\":\"https://github.com/xingrz/web-esptool\"}},[_vm._v(\"Fork me on GitHub\")])])])}]\n\nexport { render, staticRenderFns }","import ESPLoader, { IStub } from './ESPLoader';\n\nexport default class ESP8266ROM extends ESPLoader {\n\n  static CHIP_DETECT_MAGIC_VALUE = [0xfff0c101];\n\n  CHIP_NAME = 'ESP8266';\n  IS_STUB = false;\n\n  FLASH_SIZES = {\n    '512KB': 0x00,\n    '256KB': 0x10,\n    '1MB': 0x20,\n    '2MB': 0x30,\n    '4MB': 0x40,\n    '2MB-c1': 0x50,\n    '4MB-c1': 0x60,\n    '8MB': 0x80,\n    '16MB': 0x90,\n  };\n\n  BOOTLOADER_FLASH_OFFSET = 0;\n\n  STUB_CLASS = ESP8266StubLoader;\n\n  async load_stub(): Promise<IStub | null> {\n    return await import(\n      /* webpackChunkName: 'stub_flasher_8266' */\n      './stubs/stub_flasher_8266.elf'\n    );\n  }\n\n  async get_efuses(): Promise<number[]> {\n    return [\n      await this.read_reg(0x3ff00050),\n      await this.read_reg(0x3ff00054),\n      await this.read_reg(0x3ff00058),\n      await this.read_reg(0x3ff0005c),\n    ];\n  }\n\n  _get_flash_size(efuses: number[]): number {\n    const r0_4 = efuses[0] & (1 << 4);\n    const r3_25 = efuses[3] & (1 << 25);\n    const r3_26 = efuses[3] & (1 << 26);\n    const r3_27 = efuses[3] & (1 << 27);\n\n    if (r0_4 && !r3_25) {\n      if (!r3_27 && !r3_26) {\n        return 1;\n      } else if (!r3_27 && r3_26) {\n        return 2;\n      }\n    }\n    if (!r0_4 && r3_25) {\n      if (!r3_27 && !r3_26) {\n        return 2;\n      } else if (!r3_27 && r3_26) {\n        return 4;\n      }\n    }\n    return -1;\n  }\n\n  async get_chip_description(): Promise<string> {\n    const efuses = await this.get_efuses();\n    if ((efuses[0] & (1 << 4)) || (efuses[2] & (1 << 16))) {\n      const flash_size = this._get_flash_size(efuses);\n      const max_temp = efuses[0] & (1 << 5);\n      const chip_name = {\n        1: max_temp ? 'ESP8285H08' : 'ESP8285N08',\n        2: max_temp ? 'ESP8285H16' : 'ESP8285N16',\n      }[flash_size] || 'ESP8285';\n      return chip_name;\n    } else {\n      return 'ESP8266EX';\n    }\n  }\n\n  get_erase_size(offset: number, size: number): number {\n    const sectors_per_block = 16;\n    const sector_size = this.FLASH_SECTOR_SIZE;\n    const num_sectors = Math.floor((size + sector_size - 1) / sector_size);\n    const start_sector = Math.floor(offset / sector_size);\n\n    let head_sectors = sectors_per_block - (start_sector % sectors_per_block);\n    if (num_sectors < head_sectors) {\n      head_sectors = num_sectors;\n    }\n\n    if (num_sectors < 2 * head_sectors) {\n      return Math.floor((num_sectors + 1) / 2) * sector_size;\n    } else {\n      return (num_sectors - head_sectors) * sector_size;\n    }\n  }\n\n}\n\nclass ESP8266StubLoader extends ESP8266ROM {\n\n  FLASH_WRITE_SIZE = 0x4000;  // matches MAX_WRITE_BLOCK in stub_loader.c\n  IS_STUB = true;\n\n  get_erase_size(offset: number, size: number): number {\n    return size;  // stub doesn't have same size bug as ROM loader\n  }\n\n}\n","import ESPLoader, { IStub } from './ESPLoader';\n\nexport default class ESP32ROM extends ESPLoader {\n\n  static CHIP_DETECT_MAGIC_VALUE = [0x00f01d83];\n\n  CHIP_NAME = 'ESP32';\n  IS_STUB = false;\n\n  // ESP32 uses a 4 byte status reply\n  STATUS_BYTES_LENGTH = 4;\n\n  EFUSE_BLK0 = 0x3ff5a000;\n\n  DR_REG_SYSCON_BASE = 0x3ff66000;\n\n  FLASH_SIZES = {\n    '1MB': 0x00,\n    '2MB': 0x10,\n    '4MB': 0x20,\n    '8MB': 0x30,\n    '16MB': 0x40,\n  };\n\n  BOOTLOADER_FLASH_OFFSET = 0x1000;\n\n  STUB_CLASS = ESP32StubLoader;\n\n  async load_stub(): Promise<IStub | null> {\n    return await import(\n      /* webpackChunkName: 'stub_flasher_32' */\n      './stubs/stub_flasher_32.elf'\n    );\n  }\n\n  async read_efuse(block: number, n: number): Promise<number> {\n    return await this.read_reg(block + (4 * n));\n  }\n\n  async get_pkg_version(): Promise<number> {\n    // EFUSE_BLK0, 105, 3, EFUSE_RD_CHIP_VER_PKG\n    // EFUSE_BLK0, 98, 1, EFUSE_RD_CHIP_VER_PKG_4BIT\n    const word3 = await this.read_efuse(this.EFUSE_BLK0, 3);\n    return ((word3 >> 9) & 0x07) + (((word3 >> 2) & 0x1) << 3);\n  }\n\n  async get_chip_revision(): Promise<number> {\n    // EFUSE_BLK0, 111, 1, EFUSE_RD_CHIP_VER_REV1\n    // EFUSE_BLK0, 180, 1, EFUSE_RD_CHIP_VER_REV2\n    const word3 = await this.read_efuse(this.EFUSE_BLK0, 3);\n    const word5 = await this.read_efuse(this.EFUSE_BLK0, 5);\n    const apb_ctl_date = await this.read_reg(this.DR_REG_SYSCON_BASE + 0x7C);\n\n    const rev_bit0 = (word3 >> 15) & 0x1\n    const rev_bit1 = (word5 >> 20) & 0x1\n    const rev_bit2 = (apb_ctl_date >> 31) & 0x1\n\n    if (!rev_bit0) return 0;\n    if (!rev_bit1) return 1;\n    if (!rev_bit2) return 2;\n    return 3;\n  }\n\n  async get_chip_description(): Promise<string> {\n    const pkg_version = await this.get_pkg_version();\n    const chip_revision = await this.get_chip_revision();\n    const rev3 = (chip_revision == 3);\n    const single_core = (await this.read_efuse(this.EFUSE_BLK0, 3)) & (1 << 0); // CHIP_VER DIS_APP_CPU\n\n    let chip_name = {\n      0: single_core ? 'ESP32-S0WDQ6' : 'ESP32-D0WDQ6',\n      1: single_core ? 'ESP32-S0WD' : 'ESP32-D0WD',\n      2: 'ESP32-D2WD',\n      4: 'ESP32-U4WDH',\n      5: rev3 ? 'ESP32-PICO-V3' : 'ESP32-PICO-D4',\n      6: 'ESP32-PICO-V3-02',\n    }[pkg_version] || 'unknown ESP32';\n\n    if (chip_name.startsWith('ESP32-D0WD') && rev3) {\n      chip_name += '-V3';\n    }\n\n    return `${chip_name} (revision ${chip_revision})`;\n  }\n\n}\n\nclass ESP32StubLoader extends ESP32ROM {\n\n  FLASH_WRITE_SIZE = 0x4000;  // matches MAX_WRITE_BLOCK in stub_loader.c\n  STATUS_BYTES_LENGTH = 2;  // same as ESP8266, different to ESP32 ROM\n  IS_STUB = true;\n\n}\n","import { IStub } from './ESPLoader';\nimport ESP32ROM from './ESP32ROM';\n\nexport default class ESP32S2ROM extends ESP32ROM {\n\n  static CHIP_DETECT_MAGIC_VALUE = [0x000007c6];\n\n  CHIP_NAME = 'ESP32-S2';\n\n  EFUSE_BASE = 0x3f41A000;\n  EFUSE_BLK0 = this.EFUSE_BASE + 0x030;\n  EFUSE_BLK1 = this.EFUSE_BASE + 0x044;\n\n  STUB_CLASS = ESP32S2StubLoader;\n\n  async load_stub(): Promise<IStub | null> {\n    return await import(\n      /* webpackChunkName: 'stub_flasher_32s2' */\n      './stubs/stub_flasher_32s2.elf'\n    );\n  }\n\n  async get_pkg_version(): Promise<number> {\n    // EFUSE_BLK1, 117, 4, PKG_VERSION\n    const word3 = await this.read_efuse(this.EFUSE_BLK1, 3);\n    return (word3 >> 21) & 0x0F;\n  }\n\n  async get_chip_description(): Promise<string> {\n    return {\n      0: 'ESP32-S2',\n      1: 'ESP32-S2FH16',\n      2: 'ESP32-S2FH32',\n    }[await this.get_pkg_version()] || 'unknown ESP32-S2';\n  }\n\n}\n\nclass ESP32S2StubLoader extends ESP32S2ROM {\n\n  FLASH_WRITE_SIZE = 0x4000;  // matches MAX_WRITE_BLOCK in stub_loader.c\n  STATUS_BYTES_LENGTH = 2;  // same as ESP8266, different to ESP32 ROM\n  IS_STUB = true;\n\n}\n","import { IStub } from './ESPLoader';\nimport ESP32ROM from './ESP32ROM';\n\nexport default class ESP32C3ROM extends ESP32ROM {\n\n  // Magic value for ESP32C3 eco 1+2 and ESP32C3 eco3 respectivly\n  static CHIP_DETECT_MAGIC_VALUE = [0x6921506f, 0x1b31506f];\n\n  CHIP_NAME = 'ESP32-C3';\n\n  EFUSE_BASE = 0x60008800;\n  EFUSE_BLK0 = this.EFUSE_BASE + 0x030;\n  EFUSE_BLK1 = this.EFUSE_BASE + 0x044;\n\n  STUB_CLASS = ESP32C3StubLoader;\n\n  async load_stub(): Promise<IStub | null> {\n    return await import(\n      /* webpackChunkName: 'stub_flasher_32c3' */\n      './stubs/stub_flasher_32c3.elf'\n    );\n  }\n\n  async get_pkg_version(): Promise<number> {\n    // EFUSE_BLK1, 117, 3, PKG_VERSION\n    const word3 = await this.read_efuse(this.EFUSE_BLK1, 3);\n    return (word3 >> 21) & 0x07;\n  }\n\n  async get_chip_revision(): Promise<number> {\n    // EFUSE_BLK1, 114, 3, WAFER_VERSION\n    const word3 = await this.read_efuse(this.EFUSE_BLK1, 3);\n    return (word3 >> 18) & 0x07;\n  }\n\n  async get_chip_description(): Promise<string> {\n    const chip_name = {\n      0: 'ESP32-C3',\n    }[await this.get_pkg_version()] || 'unknown ESP32-C3';\n\n    const chip_revision = await this.get_chip_revision();\n\n    return `${chip_name} (revision ${chip_revision})`;\n  }\n\n}\n\nclass ESP32C3StubLoader extends ESP32C3ROM {\n\n  FLASH_WRITE_SIZE = 0x4000;  // matches MAX_WRITE_BLOCK in stub_loader.c\n  STATUS_BYTES_LENGTH = 2;  // same as ESP8266, different to ESP32 ROM\n  IS_STUB = true;\n\n}\n","import EventEmitter from 'events';\nimport type { BaseBinding } from 'serialport';\nimport SerialPort from '@serialport/stream';\nimport WSABinding from 'serialport-binding-webserialapi';\n\nimport ESPLoader from './ESPLoader';\nimport ESP8266ROM from './ESP8266ROM';\nimport ESP32ROM from './ESP32ROM';\nimport ESP32S2ROM from './ESP32S2ROM';\nimport ESP32C3ROM from './ESP32C3ROM';\n\nimport { open, closeGracefully } from './utils/serial';\nimport sleep from './utils/sleep';\nimport { IFlashArgs, IConnectEvent } from './';\n\nSerialPort.Binding = WSABinding as unknown as BaseBinding;\n\nexport default class ESPTool extends EventEmitter {\n\n  serial: SerialPort | null = null;\n  loader: ESPLoader | null = null;\n\n  async open(path: string): Promise<void> {\n    if (this.serial && this.serial.isOpen) {\n      await closeGracefully(this.serial);\n      this.serial = null;\n      await sleep(200);\n    }\n\n    this.serial = new SerialPort(path, {\n      baudRate: 115200,\n      autoOpen: false,\n    });\n\n    try {\n      await open(this.serial);\n\n      const detector = new ESPLoader(this.serial);\n      await detector.connect();\n      const chip_magic_value = await detector.read_reg(ESPLoader.CHIP_DETECT_MAGIC_REG_ADDR);\n      for (const cls of [ESP8266ROM, ESP32ROM, ESP32S2ROM, ESP32C3ROM]) {\n        if (cls.CHIP_DETECT_MAGIC_VALUE.includes(chip_magic_value)) {\n          this.loader = new cls(this.serial);\n        }\n      }\n      detector.release();\n\n      if (!this.loader) {\n        console.warn('Unsupported chip');\n        closeGracefully(this.serial);\n        this.serial = null;\n        return;\n      }\n\n      this.serial.once('close', () => {\n        console.log('Connection closed');\n        this.emit('disconnect');\n      });\n\n      const chip_description = await this.loader.get_chip_description();\n      console.log(`Detected ${chip_description}`);\n      this.emit('connect', { chip_description } as IConnectEvent);\n\n      const stub = await this.loader.run_stub();\n      if (stub != null) {\n        this.loader.release();\n        this.loader = stub;\n      }\n    } catch (e) {\n      console.warn('Failed getting chip model', e);\n      if (this.serial && this.serial.isOpen) {\n        closeGracefully(this.serial);\n      }\n      this.serial = null;\n      throw e;\n    }\n  }\n\n  async close(): Promise<void> {\n    if (this.serial && this.serial.isOpen) {\n      await closeGracefully(this.serial);\n      this.serial = null;\n    }\n  }\n\n  async flash(args: IFlashArgs): Promise<void> {\n    await this.loader?.flash(args, (progress) => this.emit('progress', progress));\n    await this.loader?.hard_reset();\n  }\n\n}\n","import ESPTool from './ESPTool';\nexport default ESPTool;\n\nexport interface IFlashArgs {\n  flashMode?: IFlashMode;\n  flashFreq?: IFlashFreq;\n  flashSize?: IFlashSize;\n  partitions: {\n    address: number;\n    image: Buffer;\n  }[];\n}\n\nexport type IFlashMode = 'keep' | 'qio' | 'qout' | 'dio' | 'dout';\nexport type IFlashFreq = 'keep' | string;\nexport type IFlashSize = 'keep' | string;\n\nexport interface IConnectEvent {\n  chip_description: string;\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from \"vue-property-decorator\";\n\nimport unpack from \"./unpack\";\nimport ESPTool, { IConnectEvent, IFlashArgs } from \"./esptool\";\n\nconst MAX_FILE_SIZE = 16 * 1024 * 1024;\n\n@Component\nexport default class App extends Vue {\n  file: File | null = null;\n  progress: number | null = null;\n  imageSizes: number[] = [];\n  imageSizesTotal = 0;\n  busy = false;\n\n  flashArgs?: IFlashArgs;\n  esp?: ESPTool;\n\n  mounted(): void {\n    this.esp = new ESPTool();\n\n    this.esp.on(\"connect\", ({ chip_description }: IConnectEvent) => {\n      console.log(`Connected: ${chip_description}`);\n      this.$message.success(`已连接：${chip_description}`);\n    });\n\n    this.esp.on(\"disconnect\", () => {\n      console.log(\"Disconnected\");\n    });\n\n    this.esp.on(\"progress\", ({ index, blocks_written, blocks_total }) => {\n      let success = 0;\n      for (let i = 0; i < index; i++) {\n        success += this.imageSizes[i];\n      }\n      const progress =\n        success + this.imageSizes[index] * (blocks_written / blocks_total);\n      this.progress = (progress / this.imageSizesTotal) * 100;\n    });\n  }\n\n  async handleFile(file: File): Promise<void> {\n    if (file.size >= MAX_FILE_SIZE) {\n      this.$message.error(\n        `文件过大: ${Math.round(file.size / 1024 / 1024)} MB`\n      );\n      return;\n    }\n\n    const flashArgs = await unpack(file);\n    if (flashArgs == null) {\n      this.$message.error(\"该文件不是一个合法的固件包\");\n      return;\n    }\n\n    this.file = file;\n    this.flashArgs = flashArgs;\n\n    this.imageSizes = flashArgs.partitions.map(({ image }) => image.length);\n    this.imageSizesTotal = this.imageSizes.reduce(\n      (total, size) => total + size,\n      0\n    );\n  }\n\n  async start(): Promise<void> {\n    this.busy = true;\n    this.progress = 0;\n    try {\n      await this.esp?.open(\"wsa://default\");\n    } catch (e) {\n      this.$message.error(\"设备打开失败\");\n      this.busy = false;\n      return;\n    }\n    try {\n      await this.esp?.flash(this.flashArgs!);\n    } catch (e) {\n      console.error(e);\n      this.$message.error(\"烧录失败\");\n    }\n    await this.esp?.close();\n    console.log(\"done\");\n    this.busy = false;\n  }\n\n  formatProgress(): string {\n    return this.progress! >= 100 ? \"完成\" : `${Math.floor(this.progress!)}%`;\n  }\n}\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--14-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--14-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=321a6c02&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\nimport Antd from 'ant-design-vue';\nimport 'ant-design-vue/dist/antd.css';\n\nimport App from './App.vue';\n\nVue.config.productionTip = false\n\nVue.use(Antd);\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app');\n","export default function pack(data: Buffer): Buffer {\n  const out = Buffer.alloc(data.length * 2 + 2);\n  out[0] = 0xC0;\n  let oi = 1;\n  for (let di = 0; di < data.length; di++) {\n    if (data[di] == 0xC0) {\n      out[oi] = 0xDB;\n      out[oi + 1] = 0xDC;\n      oi += 2;\n    } else if (data[di] == 0xDB) {\n      out[oi] = 0xDB;\n      out[oi + 1] = 0xDD;\n      oi += 2;\n    } else {\n      out[oi] = data[di];\n      oi += 1;\n    }\n  }\n  out[oi] = 0xC0;\n  return out.slice(0, oi + 1);\n}\n","import unzip from './unzip';\nimport { IFlashArgs, IFlashMode } from '@/esptool';\n\nexport default async function unpack(file: File): Promise<IFlashArgs | null> {\n  const entries = await unzip(file);\n\n  const { dir, content } = findFlashArgs(entries) || {};\n  if (!content) {\n    return null;\n  }\n\n  const args = Buffer.from(content)\n    .toString()\n    .replace(/\\n/g, ' ')\n    .split(' ')\n    .map(i => i.trim())\n    .filter(i => !!i);\n\n  const flashArgs: IFlashArgs = {\n    flashMode: 'qio',\n    partitions: [],\n  };\n\n  for (let i = 0; i < args.length - 1; i++) {\n    if (args[i] == '--flash_mode') {\n      flashArgs.flashMode = args[i + 1] as IFlashMode;\n    } else if (args[i].match(/^0x([A-Fa-f0-9]+)$/)) {\n      const address = parseInt(RegExp.$1, 16);\n      const key = `${dir}/${args[i + 1]}`;\n      if (entries[key]) {\n        flashArgs.partitions.push({ address, image: entries[key] });\n      }\n    } else if (args[i].match(/^([0-9]+)$/)) {\n      const address = parseInt(RegExp.$1);\n      const key = `${dir}/${args[i + 1]}`;\n      if (entries[key]) {\n        flashArgs.partitions.push({ address, image: entries[key] });\n      }\n    }\n  }\n\n  return flashArgs;\n}\n\nfunction findFlashArgs(entries: Record<string, Buffer>): { dir: string, content: Buffer } | null {\n  for (const name in entries) {\n    if (name.match(/^(.*)\\/flash_args$/)) {\n      return {\n        dir: RegExp.$1,\n        content: entries[name],\n      };\n    }\n  }\n  return null;\n}\n"],"sourceRoot":""}