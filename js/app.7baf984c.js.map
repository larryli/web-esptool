{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?7e02","webpack:///./src/esptool/utils/unpack.ts","webpack:///./src/esptool/utils/serial.ts","webpack:///./src/esptool/utils/once.ts","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/esptool/utils/sleep.ts","webpack:///./src/esptool/utils/hex.ts","webpack:///./src/unpack/unzip.ts","webpack:///./src/esptool/ESPLoader.ts","webpack:///./src/App.vue?eb5e","webpack:///./src/esptool/stubs/ESP8266Stub.ts","webpack:///./src/esptool/ESP8266ROM.ts","webpack:///./src/esptool/stubs/ESP32Stub.ts","webpack:///./src/esptool/ESP32ROM.ts","webpack:///./src/esptool/stubs/ESP32S2Stub.ts","webpack:///./src/esptool/ESP32S2ROM.ts","webpack:///./src/esptool/stubs/ESP32C3Stub.ts","webpack:///./src/esptool/ESP32C3ROM.ts","webpack:///./src/esptool/ESPTool.ts","webpack:///./src/esptool/index.ts","webpack:///./src/App.vue","webpack:///./src/App.vue?0ab4","webpack:///./src/App.vue?bff9","webpack:///./src/main.ts","webpack:///./src/esptool/utils/pack.ts","webpack:///./src/unpack/index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","unpack","queue","Buffer","concat","packets","pi","qi","packet","alloc","from","open","serial","close","closeGracefully","set","options","update","once","emitter","evt","timeout","Promise","resolve","reject","listener","ret","clearTimeout","timer","setTimeout","removeListener","Error","map","webpackContext","req","id","webpackContextResolve","e","code","keys","sleep","hex","v","bytes","toString","padStart","fromBuffer","readEntry","zip","onEntry","entry","onEnd","unzip","file","arrayBuffer","buffer","lazyEntries","openReadStream","entries","fileName","endsWith","stream","spoon","setImmediate","process","nextTick","unzipAsync","ESPLoader","port","this","_on_data","on","_trace","TRACE","text","console","log","_dispatch","write","op","size","readUInt16LE","val","readUInt32LE","emit","chk","tries","hdr","writeUInt16LE","writeUInt32LE","out","_write","STATUS_BYTES_LENGTH","status_bytes","command","ESP_SYNC","esp32r0_delay","dtr","rts","sync","attempts","_connect_attempt","addr","ESP_READ_REG","offset","state","ESP_CHECKSUM_MAGIC","b","blocks","blocksize","ESP_MEM_BEGIN","check","seq","buf","ESP_MEM_DATA","_checksum","entrypoint","ESP_MEM_END","num_blocks","Math","floor","FLASH_WRITE_SIZE","erase_size","get_erase_size","ESP_FLASH_BEGIN","ESP_FLASH_DATA","reboot","ESP_FLASH_END","alignment","pad_character","pad_mod","arg","FLASH_SIZES","sizes","join","stub","STUB_CODE","field","offs","ESP_RAM_BLOCK","mem_begin","from_offs","to_offs","mem_block","mem_finish","STUB_CLASS","baud","IS_STUB","baudRate","ESP_CHANGE_BAUDRATE","address","args","image","BOOTLOADER_FLASH_OFFSET","magic","flash_mode","flash_freq","flash_size","ESP_IMAGE_MAGIC","warn","flashMode","flashFreq","flashSize","_parse_flash_size_arg","onProgress","partitions","_pad_image","_update_image_flash_params","flash_begin","written","round","block","flash_block","index","blocks_written","blocks_total","read_reg","CHIP_DETECT_MAGIC_REG_ADDR","flash_finish","_vm","_h","$createElement","_c","_self","attrs","_v","staticClass","progress","ref","handleFile","_s","_e","formatProgress","busy","start","_m","staticRenderFns","ESP8266Stub","efuses","r0_4","r3_25","r3_26","r3_27","get_efuses","_get_flash_size","max_temp","chip_name","1","2","sectors_per_block","sector_size","FLASH_SECTOR_SIZE","num_sectors","start_sector","head_sectors","ESP32Stub","read_efuse","EFUSE_BLK0","word3","word5","DR_REG_SYSCON_BASE","apb_ctl_date","rev_bit0","rev_bit1","rev_bit2","get_pkg_version","pkg_version","get_chip_revision","chip_revision","rev3","single_core","0","4","5","6","startsWith","EFUSE_BASE","ESP32S2Stub","EFUSE_BLK1","ESP32C3Stub","Binding","path","isOpen","autoOpen","detector","connect","chip_magic_value","cls","CHIP_DETECT_MAGIC_VALUE","includes","loader","release","get_chip_description","chip_description","run_stub","flash","hard_reset","MAX_FILE_SIZE","hackWSABinding","navigator","getPorts","internalBasePortsList","esp","$message","success","imageSizes","imageSizesTotal","error","flashArgs","reduce","total","component","config","productionTip","use","render","h","$mount","pack","oi","di","findFlashArgs","dir","content","replace","split","trim","filter","match","parseInt","RegExp","$1"],"mappings":"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","file":"js/app.7baf984c.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","export default function unpack(queue: Buffer, data: Buffer): { queue: Buffer, packets: Buffer[] } {\n  queue = Buffer.concat([queue, data]);\n  const packets = [];\n  let pi = 0, qi = 0;\n  let packet = null;\n  while (qi < queue.length) {\n    if (queue[qi] == 0xC0) {\n      if (packet == null) {  // start\n        packet = Buffer.alloc(queue.length);\n      } else {  // end\n        packets.push(packet.slice(0, pi));\n        packet = null;\n        pi = 0;\n      }\n      qi += 1;\n    } else if (qi < queue.length - 1 && queue[qi] == 0xDB && queue[qi + 1] == 0xDC) {\n      if (packet != null) {\n        packet[pi] = 0xC0;\n        pi += 1;\n      }\n      qi += 2;\n    } else if (qi < queue.length - 1 && queue[qi] == 0xDB && queue[qi + 1] == 0xDD) {\n      if (packet != null) {\n        packet[pi] = 0xDB;\n        pi += 1;\n      }\n      qi += 2;\n    } else {\n      if (packet != null) {\n        packet[pi] = queue[qi];\n        pi += 1;\n      }\n      qi += 1;\n    }\n  }\n  if (packet != null) {\n    packet = Buffer.concat([Buffer.from([0xC0]), packet.slice(0, pi)]);\n  } else {\n    packet = Buffer.alloc(0);\n  }\n  return { queue: packet, packets };\n}\n","import SerialPort from '@serialport/stream';\nimport { promisify } from 'util';\n\nexport function open(serial: SerialPort): Promise<void> {\n  return promisify(serial.open.bind(serial))();\n}\n\nexport function close(serial: SerialPort): Promise<void> {\n  return promisify(serial.close.bind(serial))();\n}\n\nexport async function closeGracefully(serial: SerialPort): Promise<void> {\n  try {\n    await close(serial);\n  } catch (e) {\n    // ignored\n  }\n}\n\nexport function set(serial: SerialPort, options: SerialPort.SetOptions): Promise<void> {\n  return promisify(serial.set.bind(serial))(options);\n}\n\nexport function update(serial: SerialPort, options: SerialPort.UpdateOptions): Promise<void> {\n  return promisify(serial.update.bind(serial))(options);\n}\n","import EventEmitter from 'events';\n\nexport default async function once<T>(emitter: EventEmitter, evt: string, timeout: number): Promise<T> {\n  return new Promise((resolve, reject) => {\n    const listener = (ret: T) => {\n      clearTimeout(timer);\n      resolve(ret);\n    };\n\n    const timer = setTimeout(() => {\n      emitter.removeListener(evt, listener);\n      reject(new Error('Timeout'));\n    }, timeout);\n\n    emitter.once(evt, listener);\n  });\n\n}\n","var map = {\n\t\"./af\": \"2bfb\",\n\t\"./af.js\": \"2bfb\",\n\t\"./ar\": \"8e73\",\n\t\"./ar-dz\": \"a356\",\n\t\"./ar-dz.js\": \"a356\",\n\t\"./ar-kw\": \"423e\",\n\t\"./ar-kw.js\": \"423e\",\n\t\"./ar-ly\": \"1cfd\",\n\t\"./ar-ly.js\": \"1cfd\",\n\t\"./ar-ma\": \"0a84\",\n\t\"./ar-ma.js\": \"0a84\",\n\t\"./ar-sa\": \"8230\",\n\t\"./ar-sa.js\": \"8230\",\n\t\"./ar-tn\": \"6d83\",\n\t\"./ar-tn.js\": \"6d83\",\n\t\"./ar.js\": \"8e73\",\n\t\"./az\": \"485c\",\n\t\"./az.js\": \"485c\",\n\t\"./be\": \"1fc1\",\n\t\"./be.js\": \"1fc1\",\n\t\"./bg\": \"84aa\",\n\t\"./bg.js\": \"84aa\",\n\t\"./bm\": \"a7fa\",\n\t\"./bm.js\": \"a7fa\",\n\t\"./bn\": \"9043\",\n\t\"./bn-bd\": \"9686\",\n\t\"./bn-bd.js\": \"9686\",\n\t\"./bn.js\": \"9043\",\n\t\"./bo\": \"d26a\",\n\t\"./bo.js\": \"d26a\",\n\t\"./br\": \"6887\",\n\t\"./br.js\": \"6887\",\n\t\"./bs\": \"2554\",\n\t\"./bs.js\": \"2554\",\n\t\"./ca\": \"d716\",\n\t\"./ca.js\": \"d716\",\n\t\"./cs\": \"3c0d\",\n\t\"./cs.js\": \"3c0d\",\n\t\"./cv\": \"03ec\",\n\t\"./cv.js\": \"03ec\",\n\t\"./cy\": \"9797\",\n\t\"./cy.js\": \"9797\",\n\t\"./da\": \"0f14\",\n\t\"./da.js\": \"0f14\",\n\t\"./de\": \"b469\",\n\t\"./de-at\": \"b3eb\",\n\t\"./de-at.js\": \"b3eb\",\n\t\"./de-ch\": \"bb71\",\n\t\"./de-ch.js\": \"bb71\",\n\t\"./de.js\": \"b469\",\n\t\"./dv\": \"598a\",\n\t\"./dv.js\": \"598a\",\n\t\"./el\": \"8d47\",\n\t\"./el.js\": \"8d47\",\n\t\"./en-au\": \"0e6b\",\n\t\"./en-au.js\": \"0e6b\",\n\t\"./en-ca\": \"3886\",\n\t\"./en-ca.js\": \"3886\",\n\t\"./en-gb\": \"39a6\",\n\t\"./en-gb.js\": \"39a6\",\n\t\"./en-ie\": \"e1d3\",\n\t\"./en-ie.js\": \"e1d3\",\n\t\"./en-il\": \"7333\",\n\t\"./en-il.js\": \"7333\",\n\t\"./en-in\": \"ec2e\",\n\t\"./en-in.js\": \"ec2e\",\n\t\"./en-nz\": \"6f50\",\n\t\"./en-nz.js\": \"6f50\",\n\t\"./en-sg\": \"b7e9\",\n\t\"./en-sg.js\": \"b7e9\",\n\t\"./eo\": \"65db\",\n\t\"./eo.js\": \"65db\",\n\t\"./es\": \"898b\",\n\t\"./es-do\": \"0a3c\",\n\t\"./es-do.js\": \"0a3c\",\n\t\"./es-mx\": \"b5b7\",\n\t\"./es-mx.js\": \"b5b7\",\n\t\"./es-us\": \"55c9\",\n\t\"./es-us.js\": \"55c9\",\n\t\"./es.js\": \"898b\",\n\t\"./et\": \"ec18\",\n\t\"./et.js\": \"ec18\",\n\t\"./eu\": \"0ff2\",\n\t\"./eu.js\": \"0ff2\",\n\t\"./fa\": \"8df4\",\n\t\"./fa.js\": \"8df4\",\n\t\"./fi\": \"81e9\",\n\t\"./fi.js\": \"81e9\",\n\t\"./fil\": \"d69a\",\n\t\"./fil.js\": \"d69a\",\n\t\"./fo\": \"0721\",\n\t\"./fo.js\": \"0721\",\n\t\"./fr\": \"9f26\",\n\t\"./fr-ca\": \"d9f8\",\n\t\"./fr-ca.js\": \"d9f8\",\n\t\"./fr-ch\": \"0e49\",\n\t\"./fr-ch.js\": \"0e49\",\n\t\"./fr.js\": \"9f26\",\n\t\"./fy\": \"7118\",\n\t\"./fy.js\": \"7118\",\n\t\"./ga\": \"5120\",\n\t\"./ga.js\": \"5120\",\n\t\"./gd\": \"f6b4\",\n\t\"./gd.js\": \"f6b4\",\n\t\"./gl\": \"8840\",\n\t\"./gl.js\": \"8840\",\n\t\"./gom-deva\": \"aaf2\",\n\t\"./gom-deva.js\": \"aaf2\",\n\t\"./gom-latn\": \"0caa\",\n\t\"./gom-latn.js\": \"0caa\",\n\t\"./gu\": \"e0c5\",\n\t\"./gu.js\": \"e0c5\",\n\t\"./he\": \"c7aa\",\n\t\"./he.js\": \"c7aa\",\n\t\"./hi\": \"dc4d\",\n\t\"./hi.js\": \"dc4d\",\n\t\"./hr\": \"4ba9\",\n\t\"./hr.js\": \"4ba9\",\n\t\"./hu\": \"5b14\",\n\t\"./hu.js\": \"5b14\",\n\t\"./hy-am\": \"d6b6\",\n\t\"./hy-am.js\": \"d6b6\",\n\t\"./id\": \"5038\",\n\t\"./id.js\": \"5038\",\n\t\"./is\": \"0558\",\n\t\"./is.js\": \"0558\",\n\t\"./it\": \"6e98\",\n\t\"./it-ch\": \"6f12\",\n\t\"./it-ch.js\": \"6f12\",\n\t\"./it.js\": \"6e98\",\n\t\"./ja\": \"079e\",\n\t\"./ja.js\": \"079e\",\n\t\"./jv\": \"b540\",\n\t\"./jv.js\": \"b540\",\n\t\"./ka\": \"201b\",\n\t\"./ka.js\": \"201b\",\n\t\"./kk\": \"6d79\",\n\t\"./kk.js\": \"6d79\",\n\t\"./km\": \"e81d\",\n\t\"./km.js\": \"e81d\",\n\t\"./kn\": \"3e92\",\n\t\"./kn.js\": \"3e92\",\n\t\"./ko\": \"22f8\",\n\t\"./ko.js\": \"22f8\",\n\t\"./ku\": \"2421\",\n\t\"./ku.js\": \"2421\",\n\t\"./ky\": \"9609\",\n\t\"./ky.js\": \"9609\",\n\t\"./lb\": \"440c\",\n\t\"./lb.js\": \"440c\",\n\t\"./lo\": \"b29d\",\n\t\"./lo.js\": \"b29d\",\n\t\"./lt\": \"26f9\",\n\t\"./lt.js\": \"26f9\",\n\t\"./lv\": \"b97c\",\n\t\"./lv.js\": \"b97c\",\n\t\"./me\": \"293c\",\n\t\"./me.js\": \"293c\",\n\t\"./mi\": \"688b\",\n\t\"./mi.js\": \"688b\",\n\t\"./mk\": \"6909\",\n\t\"./mk.js\": \"6909\",\n\t\"./ml\": \"02fb\",\n\t\"./ml.js\": \"02fb\",\n\t\"./mn\": \"958b\",\n\t\"./mn.js\": \"958b\",\n\t\"./mr\": \"39bd\",\n\t\"./mr.js\": \"39bd\",\n\t\"./ms\": \"ebe4\",\n\t\"./ms-my\": \"6403\",\n\t\"./ms-my.js\": \"6403\",\n\t\"./ms.js\": \"ebe4\",\n\t\"./mt\": \"1b45\",\n\t\"./mt.js\": \"1b45\",\n\t\"./my\": \"8689\",\n\t\"./my.js\": \"8689\",\n\t\"./nb\": \"6ce3\",\n\t\"./nb.js\": \"6ce3\",\n\t\"./ne\": \"3a39\",\n\t\"./ne.js\": \"3a39\",\n\t\"./nl\": \"facd\",\n\t\"./nl-be\": \"db29\",\n\t\"./nl-be.js\": \"db29\",\n\t\"./nl.js\": \"facd\",\n\t\"./nn\": \"b84c\",\n\t\"./nn.js\": \"b84c\",\n\t\"./oc-lnc\": \"167b\",\n\t\"./oc-lnc.js\": \"167b\",\n\t\"./pa-in\": \"f3ff\",\n\t\"./pa-in.js\": \"f3ff\",\n\t\"./pl\": \"8d57\",\n\t\"./pl.js\": \"8d57\",\n\t\"./pt\": \"f260\",\n\t\"./pt-br\": \"d2d4\",\n\t\"./pt-br.js\": \"d2d4\",\n\t\"./pt.js\": \"f260\",\n\t\"./ro\": \"972c\",\n\t\"./ro.js\": \"972c\",\n\t\"./ru\": \"957c\",\n\t\"./ru.js\": \"957c\",\n\t\"./sd\": \"6784\",\n\t\"./sd.js\": \"6784\",\n\t\"./se\": \"ffff\",\n\t\"./se.js\": \"ffff\",\n\t\"./si\": \"eda5\",\n\t\"./si.js\": \"eda5\",\n\t\"./sk\": \"7be6\",\n\t\"./sk.js\": \"7be6\",\n\t\"./sl\": \"8155\",\n\t\"./sl.js\": \"8155\",\n\t\"./sq\": \"c8f3\",\n\t\"./sq.js\": \"c8f3\",\n\t\"./sr\": \"cf1e\",\n\t\"./sr-cyrl\": \"13e9\",\n\t\"./sr-cyrl.js\": \"13e9\",\n\t\"./sr.js\": \"cf1e\",\n\t\"./ss\": \"52bd\",\n\t\"./ss.js\": \"52bd\",\n\t\"./sv\": \"5fbd\",\n\t\"./sv.js\": \"5fbd\",\n\t\"./sw\": \"74dc\",\n\t\"./sw.js\": \"74dc\",\n\t\"./ta\": \"3de5\",\n\t\"./ta.js\": \"3de5\",\n\t\"./te\": \"5cbb\",\n\t\"./te.js\": \"5cbb\",\n\t\"./tet\": \"576c\",\n\t\"./tet.js\": \"576c\",\n\t\"./tg\": \"3b1b\",\n\t\"./tg.js\": \"3b1b\",\n\t\"./th\": \"10e8\",\n\t\"./th.js\": \"10e8\",\n\t\"./tk\": \"5aff\",\n\t\"./tk.js\": \"5aff\",\n\t\"./tl-ph\": \"0f38\",\n\t\"./tl-ph.js\": \"0f38\",\n\t\"./tlh\": \"cf75\",\n\t\"./tlh.js\": \"cf75\",\n\t\"./tr\": \"0e81\",\n\t\"./tr.js\": \"0e81\",\n\t\"./tzl\": \"cf51\",\n\t\"./tzl.js\": \"cf51\",\n\t\"./tzm\": \"c109\",\n\t\"./tzm-latn\": \"b53d\",\n\t\"./tzm-latn.js\": \"b53d\",\n\t\"./tzm.js\": \"c109\",\n\t\"./ug-cn\": \"6117\",\n\t\"./ug-cn.js\": \"6117\",\n\t\"./uk\": \"ada2\",\n\t\"./uk.js\": \"ada2\",\n\t\"./ur\": \"5294\",\n\t\"./ur.js\": \"5294\",\n\t\"./uz\": \"2e8c\",\n\t\"./uz-latn\": \"010e\",\n\t\"./uz-latn.js\": \"010e\",\n\t\"./uz.js\": \"2e8c\",\n\t\"./vi\": \"2921\",\n\t\"./vi.js\": \"2921\",\n\t\"./x-pseudo\": \"fd7e\",\n\t\"./x-pseudo.js\": \"fd7e\",\n\t\"./yo\": \"7f33\",\n\t\"./yo.js\": \"7f33\",\n\t\"./zh-cn\": \"5c3a\",\n\t\"./zh-cn.js\": \"5c3a\",\n\t\"./zh-hk\": \"49ab\",\n\t\"./zh-hk.js\": \"49ab\",\n\t\"./zh-mo\": \"3a6c\",\n\t\"./zh-mo.js\": \"3a6c\",\n\t\"./zh-tw\": \"90ea\",\n\t\"./zh-tw.js\": \"90ea\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"4678\";","export default function sleep(timeout: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, timeout));\n}\n","export default function hex(v: number, bytes = 1): string {\n  return `0x${v.toString(16).padStart(bytes * 2, '0')}`;\n}\n","import { promisify } from 'util';\nimport yauzl, { Entry, Options, ZipFile } from 'yauzl';\nimport pond from 'pond';\n\nconst fromBuffer = promisify(yauzl.fromBuffer) as\n  (buffer: Buffer, options?: Options) => Promise<ZipFile>;\n\n// Hack yauzl\n// @ts-ignore\nwindow.setImmediate = process.nextTick;\n\nfunction readEntry(zip: ZipFile): Promise<Entry | null> {\n  return new Promise((resolve) => {\n    const onEntry = (entry: Entry) => {\n      zip.removeListener('end', onEnd);\n      resolve(entry);\n    };\n\n    const onEnd = () => {\n      zip.removeListener('entry', onEntry);\n      resolve(null);\n    };\n\n    zip.once('entry', onEntry);\n    zip.once('end', onEnd);\n    zip.readEntry();\n  });\n}\n\nexport default async function unzip(file: File): Promise<Record<string, Buffer>> {\n  const buffer = Buffer.from(await file.arrayBuffer());\n  const zip = await fromBuffer(buffer, { lazyEntries: true });\n  const openReadStream = promisify(zip.openReadStream.bind(zip));\n\n  const entries: Record<string, Buffer> = {};\n  let entry;\n  while ((entry = await readEntry(zip)) != null) {\n    if (entry.fileName.endsWith('/')) {\n      continue;\n    }\n\n    const stream = await openReadStream(entry);\n    entries[`/${entry.fileName}`] = await pond(stream).spoon();\n  }\n\n  return entries;\n}\n","import { promisify } from 'util';\nimport { unzip } from 'zlib';\nimport SerialPort from '@serialport/stream';\nimport hex from './utils/hex';\nimport once from './utils/once';\nimport sleep from './utils/sleep';\nimport pack from './utils/pack';\nimport unpack from './utils/unpack';\nimport { set, update } from './utils/serial';\nimport { IFlashArgs } from './';\n\nconst unzipAsync = promisify(unzip);\n\ninterface IResponse {\n  val: number;\n  data: Buffer;\n}\n\nexport interface IStub {\n  text: string;\n  text_start: number;\n  entry: number;\n  data: string;\n  data_start: number;\n}\n\nexport interface IFlashProgress {\n  index: number;\n  blocks_written: number;\n  blocks_total: number;\n}\n\nexport default class ESPLoader {\n\n  static TRACE = false;\n\n  // This ROM address has a different value on each chip model\n  static CHIP_DETECT_MAGIC_REG_ADDR = 0x40001000;\n\n  CHIP_NAME = 'Espressif device';\n  IS_STUB = false;\n\n  // Commands supported by ESP8266 ROM bootloader\n  ESP_FLASH_BEGIN = 0x02;\n  ESP_FLASH_DATA = 0x03;\n  ESP_FLASH_END = 0x04;\n  ESP_MEM_BEGIN = 0x05;\n  ESP_MEM_END = 0x06;\n  ESP_MEM_DATA = 0x07;\n  ESP_SYNC = 0x08;\n  ESP_READ_REG = 0x0A;\n\n  // Some comands supported by ESP32 ROM bootloader(or -8266 w / stub)\n  ESP_SPI_ATTACH = 0x0D;\n  ESP_CHANGE_BAUDRATE = 0x0F;\n\n  // Maximum block sized for RAM and Flash writes, respectively.\n  ESP_RAM_BLOCK = 0x1800;\n\n  FLASH_WRITE_SIZE = 0x400;\n\n  //First byte of the application image\n  ESP_IMAGE_MAGIC = 0xe9;\n\n  // Initial state for the checksum routine\n  ESP_CHECKSUM_MAGIC = 0xef;\n\n  // Flash sector size, minimum unit of erase.\n  FLASH_SECTOR_SIZE = 0x1000;\n\n  // The number of bytes in the UART response that signify command status\n  STATUS_BYTES_LENGTH = 2;\n\n  BOOTLOADER_FLASH_OFFSET = 0;\n  FLASH_SIZES: Record<string, number> = {};\n\n  port: SerialPort;\n  queue: Buffer;\n\n  STUB_CODE?: IStub;\n  STUB_CLASS?: { new(port: SerialPort): ESPLoader };\n\n  private _trace: (text?: string) => void;\n\n  constructor(port: SerialPort) {\n    this._on_data = this._on_data.bind(this);\n\n    this.port = port;\n    this.port.on('data', this._on_data);\n\n    this.queue = Buffer.alloc(0);\n\n    this._trace = ESPLoader.TRACE\n      ? (text) => console.log(`%cTRACE ${text}`, 'color: darkcyan')\n      : () => null;\n  }\n\n  release(): void {\n    this.port.removeListener('data', this._on_data);\n  }\n\n  _on_data(data: Buffer): void {\n    this._trace(`Read ${data.length} bytes: ${data.toString('hex')}`);\n    const { queue, packets } = unpack(this.queue, data);\n    this.queue = queue;\n    for (const packet of packets) {\n      this._dispatch(packet);\n    }\n  }\n\n  _write(data: Buffer): void {\n    data = pack(data);\n    this._trace(`Write ${data.length} bytes: ${data.toString('hex')}`);\n    this.port.write(data);\n  }\n\n  _dispatch(data: Buffer): void {\n    if (data.length < 8) return;\n    if (data[0] != 0x01) return;\n    const op = data[1];\n    const size = data.readUInt16LE(2);\n    const val = data.readUInt32LE(4);\n    data = data.slice(8);\n\n    this._trace(`< res op=${hex(op)} len=${size} val=${val} data=${data.toString('hex')}`);\n\n    this.port.emit(`res:${op}`, { val, data } as IResponse);\n  }\n\n  async command(op: number, data: Buffer, chk = 0, timeout = 500, tries = 5): Promise<IResponse> {\n    this._trace(`> req op=${hex(op)} len=${data.length} data=${data.toString('hex')}`);\n\n    const hdr = Buffer.alloc(8);\n    hdr[0] = 0x00;\n    hdr[1] = op;\n    hdr.writeUInt16LE(data.length, 2);\n    hdr.writeUInt32LE(chk, 4);\n    const out = Buffer.concat([hdr, data]);\n    for (let i = 0; i < tries; i++) {\n      try {\n        this._write(out);\n        return await once(this.port, `res:${op}`, timeout) as IResponse;\n      } catch (e) {\n        // ignored\n      }\n    }\n    throw new Error('Timeout waiting for command response');\n  }\n\n  check({ val, data }: IResponse): number | Buffer {\n    if (data.length < this.STATUS_BYTES_LENGTH) {\n      throw new Error(`Only got ${data.length} byte status response.`);\n    }\n\n    const status_bytes = data.slice(0, this.STATUS_BYTES_LENGTH);\n    if (status_bytes[0] != 0) {\n      throw new Error(`Command failed: ${status_bytes.toString('hex')}`);\n    }\n\n    // if we had more data than just the status bytes, return it as the result\n    // (this is used by the md5sum command, maybe other commands ?)\n    if (data.length > this.STATUS_BYTES_LENGTH) {\n      return data.slice(this.STATUS_BYTES_LENGTH);\n    } else {\n      // otherwise, just return the 'val' field which comes from the reply header(this is used by read_reg)\n      return val;\n    }\n  }\n\n  async sync(): Promise<number> {\n    const data = Buffer.concat([\n      Buffer.from([0x07, 0x07, 0x12, 0x20]),\n      Buffer.alloc(32, 0x55),\n    ]);\n    const { val } = await this.command(this.ESP_SYNC, data);\n    return val;\n  }\n\n  async _connect_attempt(esp32r0_delay = false): Promise<boolean> {\n    // esp32r0_delay is a workaround for bugs with the most common auto reset\n    // circuit and Windows, if the EN pin on the dev board does not have\n    // enough capacitance.\n    //\n    // Newer dev boards shouldn't have this problem (higher value capacitor\n    // on the EN pin), and ESP32 revision 1 can't use this workaround as it\n    // relies on a silicon bug.\n    //\n    // Details: https://github.com/espressif/esptool/issues/136\n\n    // IO0 = HIGH\n    // EN = LOW, chip in reset\n    await set(this.port, { dtr: false, rts: true });\n\n    await sleep(100);\n    if (esp32r0_delay) {\n      // Some chips are more likely to trigger the esp32r0\n      // watchdog reset silicon bug if they're held with EN=LOW\n      // for a longer period\n      await sleep(1200);\n    }\n\n    // IO0 = LOW\n    // EN = HIGH, chip out of reset\n    await set(this.port, { dtr: true, rts: false });\n\n    if (esp32r0_delay) {\n      // Sleep longer after reset.\n      // This workaround only works on revision 0 ESP32 chips,\n      // it exploits a silicon bug spurious watchdog reset.\n      await sleep(400);  // allow watchdog reset to occur\n    }\n    await sleep(50);\n\n    // IO0 = HIGH, done\n    await set(this.port, { dtr: false, rts: false });\n\n    for (let i = 0; i < 5; i++) {\n      try {\n        await this.sync();\n        return true;\n      } catch (e) {\n        await sleep(50);\n      }\n    }\n\n    return false;\n  }\n\n  async connect(attempts = 7): Promise<boolean> {\n    for (let i = 0; i < attempts; i++) {\n      try {\n        if (await this._connect_attempt(false)) {\n          return true;\n        } else if (await this._connect_attempt(true)) {\n          return true;\n        }\n      } catch (e) {\n        // ignored\n      }\n    }\n\n    return false;\n  }\n\n  async read_reg(addr: number): Promise<number> {\n    const data = Buffer.alloc(4);\n    data.writeUInt32LE(addr, 0);\n    const { val } = await this.command(this.ESP_READ_REG, data);\n    return val;\n  }\n\n  async get_chip_description(): Promise<string> {\n    throw new Error('Not supported');\n  }\n\n  get_erase_size(offset: number, size: number): number {\n    return size;\n  }\n\n  _checksum(data: Buffer): number {\n    let state = this.ESP_CHECKSUM_MAGIC;\n    for (const b of data) {\n      state ^= b;\n    }\n    return state;\n  }\n\n  async mem_begin(size: number, blocks: number, blocksize: number, offset: number): Promise<void> {\n    const data = Buffer.alloc(16);\n    data.writeUInt32LE(size, 0);\n    data.writeUInt32LE(blocks, 4);\n    data.writeUInt32LE(blocksize, 8);\n    data.writeUInt32LE(offset, 12);\n\n    this.check(await this.command(this.ESP_MEM_BEGIN, data, 0, 5000, 1));\n  }\n\n  async mem_block(data: Buffer, seq: number): Promise<void> {\n    const hdr = Buffer.alloc(16);\n    hdr.writeUInt32LE(data.length, 0);\n    hdr.writeUInt32LE(seq, 4);\n    hdr.writeUInt32LE(0, 8);\n    hdr.writeUInt32LE(0, 12);\n\n    const buf = Buffer.concat([hdr, data]);\n    this.check(await this.command(this.ESP_MEM_DATA, buf, this._checksum(data), 5000, 1));\n  }\n\n  async mem_finish(entrypoint = 0): Promise<void> {\n    const data = Buffer.alloc(8);\n    data.writeUInt32LE(entrypoint == 0 ? 1 : 0, 0);\n    data.writeUInt32LE(entrypoint, 4);\n    this.check(await this.command(this.ESP_MEM_END, data, 0, 50, 1));\n  }\n\n  async flash_begin(size: number, offset: number): Promise<number> {\n    const num_blocks = Math.floor((size + this.FLASH_WRITE_SIZE - 1) / this.FLASH_WRITE_SIZE);\n    const erase_size = this.get_erase_size(offset, size);\n\n    const data = Buffer.alloc(16);\n    data.writeUInt32LE(erase_size, 0);\n    data.writeUInt32LE(num_blocks, 4);\n    data.writeUInt32LE(this.FLASH_WRITE_SIZE, 8);\n    data.writeUInt32LE(offset, 12);\n\n    this.check(await this.command(this.ESP_FLASH_BEGIN, data, 0, 5000, 1));\n\n    return num_blocks;\n  }\n\n  async flash_block(data: Buffer, seq: number): Promise<void> {\n    const hdr = Buffer.alloc(16);\n    hdr.writeUInt32LE(data.length, 0);\n    hdr.writeUInt32LE(seq, 4);\n    hdr.writeUInt32LE(0, 8);\n    hdr.writeUInt32LE(0, 12);\n\n    const buf = Buffer.concat([hdr, data]);\n    this.check(await this.command(this.ESP_FLASH_DATA, buf, this._checksum(data), 5000, 1));\n  }\n\n  async flash_finish(reboot = false): Promise<void> {\n    const data = Buffer.alloc(4);\n    data.writeUInt32LE(reboot ? 0 : 1, 0);\n    this.check(await this.command(this.ESP_FLASH_END, data));\n  }\n\n  _pad_image(data: Buffer, alignment: number, pad_character = 0xFF): Buffer {\n    const pad_mod = data.length % alignment;\n    if (pad_mod != 0) {\n      data = Buffer.concat([data, Buffer.alloc(pad_mod, pad_character)]);\n    }\n    return data;\n  }\n\n  _parse_flash_size_arg(arg: string): number {\n    if (this.FLASH_SIZES[arg]) {\n      return this.FLASH_SIZES[arg];\n    } else {\n      const sizes = Object.keys(this.FLASH_SIZES).join(', ');\n      throw new Error(`Flash size '${arg}' is not supported by this chip type. Supported sizes: ${sizes}`);\n    }\n  }\n\n  async run_stub(): Promise<ESPLoader> {\n    const stub = this.STUB_CODE as unknown as Record<string, string | number>;\n\n    console.log('Uploading stub...');\n    for (const field of ['text', 'data']) {\n      if (!stub[field]) continue;\n      const offs = stub[`${field}_start`] as number;\n      const code = await unzipAsync(Buffer.from(stub[field] as string, 'base64'));\n      const blocks = Math.floor((code.length + this.ESP_RAM_BLOCK - 1) / this.ESP_RAM_BLOCK);\n      await this.mem_begin(code.length, blocks, this.ESP_RAM_BLOCK, offs);\n      for (let seq = 0; seq < blocks; seq++) {\n        const from_offs = seq * this.ESP_RAM_BLOCK;\n        const to_offs = from_offs + this.ESP_RAM_BLOCK;\n        await this.mem_block(code.slice(from_offs, to_offs), seq);\n      }\n    }\n\n    console.log('Running stub...');\n    await this.mem_finish(stub['entry'] as number);\n    await sleep(500);\n\n    console.log('Stub running...');\n    return new this.STUB_CLASS!(this.port);\n  }\n\n  async change_baud(baud: number): Promise<void> {\n    console.log(`Changing baud rate to ${baud}`);\n    const data = Buffer.alloc(8);\n    data.writeUInt32LE(baud, 0);\n    data.writeUInt32LE(this.IS_STUB ? this.port.baudRate : 0, 4);  // stub takes the new baud rate and the old one\n    await this.command(this.ESP_CHANGE_BAUDRATE, data);\n    console.log('Changed.');\n    await update(this.port, { baudRate: baud });\n    await sleep(50);  // get rid of crap sent during baud rate change\n  }\n\n  _update_image_flash_params(address: number, args: IFlashArgs, image: Buffer): Buffer {\n    if (address != this.BOOTLOADER_FLASH_OFFSET) {\n      return image;  // not flashing bootloader offset, so don't modify this\n    }\n\n    const magic = image[0];\n    let flash_mode = image[2];\n    let flash_freq = image[3] & 0x0F;\n    let flash_size = image[3] & 0xF0;\n\n    if (magic != this.ESP_IMAGE_MAGIC) {\n      console.warn(`Warning: Image file at ${address} doesn't look like an image file, so not changing any flash settings.`);\n      return image;\n    }\n\n    // TODO: verify bootloader image\n\n    if (args.flashMode && args.flashMode != 'keep') {\n      flash_mode = { 'qio': 0, 'qout': 1, 'dio': 2, 'dout': 3 }[args.flashMode]!;\n    }\n\n    if (args.flashFreq && args.flashFreq != 'keep') {\n      flash_freq = { '40m': 0, '26m': 1, '20m': 2, '80m': 0xf }[args.flashFreq]!;\n    }\n\n    if (args.flashSize && args.flashSize != 'keep') {\n      flash_size = this._parse_flash_size_arg(args.flashSize);\n    }\n\n    image[2] = flash_mode;\n    image[3] = flash_freq | flash_size;\n\n    return image;\n  }\n\n  async flash(args: IFlashArgs, onProgress: (progress: IFlashProgress) => void): Promise<void> {\n    for (let i = 0; i < args.partitions.length; i++) {\n      const { address } = args.partitions[i];\n      let { image } = args.partitions[i];\n      console.log(`Part ${i}: address=${hex(address, 4)} size=${image.length}`);\n\n      image = this._pad_image(image, 4);\n      if (image.length == 0) {\n        console.warn(`Skipped empty part ${i} address=${hex(address, 4)}`);\n        continue;\n      }\n\n      image = this._update_image_flash_params(address, args, image);\n\n      const blocks = await this.flash_begin(image.length, address);\n\n      let seq = 0;\n      let written = 0;\n      while (image.length > 0) {\n        console.log(`Writing at ${hex(address + seq * this.FLASH_WRITE_SIZE, 4)}... (${Math.round((seq + 1) / blocks * 100)}%)`);\n        const block = image.slice(0, this.FLASH_WRITE_SIZE);\n        await this.flash_block(block, seq);\n        image = image.slice(this.FLASH_WRITE_SIZE);\n        seq += 1\n        written += block.length;\n        onProgress({ index: i, blocks_written: seq + 1, blocks_total: blocks });\n      }\n\n      if (this.IS_STUB) {\n        // Stub only writes each block to flash after 'ack'ing the receive, so do a final dummy operation which will\n        // not be 'ack'ed until the last block has actually been written out to flash\n        await this.read_reg(ESPLoader.CHIP_DETECT_MAGIC_REG_ADDR);\n      }\n\n      console.log(`Wrote ${written} bytes`);\n    }\n\n    console.log('Leaving...');\n\n    if (this.IS_STUB) {\n      // skip sending flash_finish to ROM loader here,\n      // as it causes the loader to exit and run user code\n      await this.flash_begin(0, 0);\n      await this.flash_finish(false);\n    }\n  }\n\n  async hard_reset(): Promise<void> {\n    await set(this.port, { dtr: false, rts: true });  // EN->LOW\n    await sleep(100);\n    await set(this.port, { dtr: false, rts: false });\n  }\n\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{attrs:{\"id\":\"app\"}},[_c('h1',[_vm._v(\"Web ESPTool\")]),_c('div',{staticClass:\"author\"},[_vm._v(\"by XiNGRZ\")]),(_vm.progress == null)?_c('div',{staticClass:\"main upload\"},[_c('a-upload-dragger',{staticClass:\"uploader\",attrs:{\"accept\":\".zip\",\"showUploadList\":false,\"customRequest\":function (ref) {\n\tvar file = ref.file;\n\n\treturn _vm.handleFile(file);\n}}},[_c('p',{staticClass:\"ant-upload-drag-icon\"},[_c('a-icon',{attrs:{\"type\":_vm.file ? 'file-zip' : 'inbox'}})],1),(_vm.file)?_c('p',{staticClass:\"ant-upload-text file\"},[_vm._v(_vm._s(_vm.file.name))]):_c('p',{staticClass:\"ant-upload-text\"},[_vm._v(\"点击选择或将固件包拖放到此处\")])])],1):_vm._e(),(_vm.progress != null)?_c('div',{staticClass:\"main progress\"},[_c('a-progress',{attrs:{\"type\":\"circle\",\"width\":150,\"strokeWidth\":4,\"percent\":_vm.progress,\"status\":_vm.progress >= 100 ? 'success' : 'active',\"format\":_vm.formatProgress}})],1):_vm._e(),_c('div',{staticClass:\"buttons\"},[_c('a-button',{attrs:{\"size\":\"large\",\"type\":\"primary\",\"disabled\":_vm.busy || !_vm.file},on:{\"click\":_vm.start}},[_vm._v(\"开始烧录\")])],1)]),_vm._m(0)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"footer\"},[_c('div',[_vm._v(\"Copyright © 2021 XiNGRZ\")]),_c('div',[_c('a',{attrs:{\"href\":\"https://github.com/xingrz/web-esptool\"}},[_vm._v(\"Fork me on GitHub\")])])])}]\n\nexport { render, staticRenderFns }","import { IStub } from '../ESPLoader';\n\nexport default {\n  'text': '',\n  'text_start': 1074843648,\n  'entry': 1074843652,\n  'data': 'eNqN0ctKw0AUgOGZXJqkFzvVhYp4X7qxKLjowhEfwYXuvBTBvb5A9QH0HQpufAJdaMWHqPWC1ardCL6AqH/MhIaI4IGPyZBzzpxJ/Nrnous6wrI9Yds5cdpU+h2j10qfYaer9FhL6T00WtF+/0bpLzRuo31o7S5aFx6UFm2lK+3eu6Z5vnhUevtJ6XpH6eqz0vMvvZzY1mu0ruLoXulDZjgm74TzPsz5b+SUu79r06aoWcc59VIIYcGGAxceAhRQwjAmUcYSNlHDJSQNapA0kTSRNJEZ+MhDYQgTmIXGhvgzpGEl5opni+cLZQzP8I3AyBo5I28UjDiS984kegWJ+jC/aL7FAAYxgnFMYwZzqGAZK6hiFweo4wqd8E5S/DtkipVipzgpbkoyVKlf+F6Qybo5J28XrD5Z/PmX0tR+Awg1Z7I=',\n  'data_start': 1073720488,\n} as IStub;\n","import ESPLoader from './ESPLoader';\nimport ESP8266Stub from './stubs/ESP8266Stub';\n\nexport default class ESP8266ROM extends ESPLoader {\n\n  static CHIP_DETECT_MAGIC_VALUE = [0xfff0c101];\n\n  CHIP_NAME = 'ESP8266';\n  IS_STUB = false;\n\n  FLASH_SIZES = {\n    '512KB': 0x00,\n    '256KB': 0x10,\n    '1MB': 0x20,\n    '2MB': 0x30,\n    '4MB': 0x40,\n    '2MB-c1': 0x50,\n    '4MB-c1': 0x60,\n    '8MB': 0x80,\n    '16MB': 0x90,\n  };\n\n  BOOTLOADER_FLASH_OFFSET = 0;\n\n  STUB_CLASS = ESP8266StubLoader;\n  STUB_CODE = ESP8266Stub;\n\n  async get_efuses(): Promise<number[]> {\n    return [\n      await this.read_reg(0x3ff00050),\n      await this.read_reg(0x3ff00054),\n      await this.read_reg(0x3ff00058),\n      await this.read_reg(0x3ff0005c),\n    ];\n  }\n\n  _get_flash_size(efuses: number[]): number {\n    const r0_4 = efuses[0] & (1 << 4);\n    const r3_25 = efuses[3] & (1 << 25);\n    const r3_26 = efuses[3] & (1 << 26);\n    const r3_27 = efuses[3] & (1 << 27);\n\n    if (r0_4 && !r3_25) {\n      if (!r3_27 && !r3_26) {\n        return 1;\n      } else if (!r3_27 && r3_26) {\n        return 2;\n      }\n    }\n    if (!r0_4 && r3_25) {\n      if (!r3_27 && !r3_26) {\n        return 2;\n      } else if (!r3_27 && r3_26) {\n        return 4;\n      }\n    }\n    return -1;\n  }\n\n  async get_chip_description(): Promise<string> {\n    const efuses = await this.get_efuses();\n    if ((efuses[0] & (1 << 4)) || (efuses[2] & (1 << 16))) {\n      const flash_size = this._get_flash_size(efuses);\n      const max_temp = efuses[0] & (1 << 5);\n      const chip_name = {\n        1: max_temp ? 'ESP8285H08' : 'ESP8285N08',\n        2: max_temp ? 'ESP8285H16' : 'ESP8285N16',\n      }[flash_size] || 'ESP8285';\n      return chip_name;\n    } else {\n      return 'ESP8266EX';\n    }\n  }\n\n  get_erase_size(offset: number, size: number): number {\n    const sectors_per_block = 16;\n    const sector_size = this.FLASH_SECTOR_SIZE;\n    const num_sectors = Math.floor((size + sector_size - 1) / sector_size);\n    const start_sector = Math.floor(offset / sector_size);\n\n    let head_sectors = sectors_per_block - (start_sector % sectors_per_block);\n    if (num_sectors < head_sectors) {\n      head_sectors = num_sectors;\n    }\n\n    if (num_sectors < 2 * head_sectors) {\n      return Math.floor((num_sectors + 1) / 2) * sector_size;\n    } else {\n      return (num_sectors - head_sectors) * sector_size;\n    }\n  }\n\n}\n\nclass ESP8266StubLoader extends ESP8266ROM {\n\n  FLASH_WRITE_SIZE = 0x4000;  // matches MAX_WRITE_BLOCK in stub_loader.c\n  IS_STUB = true;\n\n  get_erase_size(offset: number, size: number): number {\n    return size;  // stub doesn't have same size bug as ROM loader\n  }\n\n}\n","import { IStub } from '../ESPLoader';\n\nexport default {\n  'text': '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',\n  'text_start': 1074520064,\n  'entry': 1074521516,\n  'data': 'eNrjOPDHHgAEmwIE',\n  'data_start': 1073605544,\n} as IStub;\n","import ESPLoader from './ESPLoader';\nimport ESP32Stub from './stubs/ESP32Stub';\n\nexport default class ESP32ROM extends ESPLoader {\n\n  static CHIP_DETECT_MAGIC_VALUE = [0x00f01d83];\n\n  CHIP_NAME = 'ESP32';\n  IS_STUB = false;\n\n  // ESP32 uses a 4 byte status reply\n  STATUS_BYTES_LENGTH = 4;\n\n  EFUSE_BLK0 = 0x3ff5a000;\n\n  DR_REG_SYSCON_BASE = 0x3ff66000;\n\n  FLASH_SIZES = {\n    '1MB': 0x00,\n    '2MB': 0x10,\n    '4MB': 0x20,\n    '8MB': 0x30,\n    '16MB': 0x40,\n  };\n\n  BOOTLOADER_FLASH_OFFSET = 0x1000;\n\n  STUB_CLASS = ESP32StubLoader;\n  STUB_CODE = ESP32Stub;\n\n  async read_efuse(block: number, n: number): Promise<number> {\n    return await this.read_reg(block + (4 * n));\n  }\n\n  async get_pkg_version(): Promise<number> {\n    // EFUSE_BLK0, 105, 3, EFUSE_RD_CHIP_VER_PKG\n    // EFUSE_BLK0, 98, 1, EFUSE_RD_CHIP_VER_PKG_4BIT\n    const word3 = await this.read_efuse(this.EFUSE_BLK0, 3);\n    return ((word3 >> 9) & 0x07) + (((word3 >> 2) & 0x1) << 3);\n  }\n\n  async get_chip_revision(): Promise<number> {\n    // EFUSE_BLK0, 111, 1, EFUSE_RD_CHIP_VER_REV1\n    // EFUSE_BLK0, 180, 1, EFUSE_RD_CHIP_VER_REV2\n    const word3 = await this.read_efuse(this.EFUSE_BLK0, 3);\n    const word5 = await this.read_efuse(this.EFUSE_BLK0, 5);\n    const apb_ctl_date = await this.read_reg(this.DR_REG_SYSCON_BASE + 0x7C);\n\n    const rev_bit0 = (word3 >> 15) & 0x1\n    const rev_bit1 = (word5 >> 20) & 0x1\n    const rev_bit2 = (apb_ctl_date >> 31) & 0x1\n\n    if (!rev_bit0) return 0;\n    if (!rev_bit1) return 1;\n    if (!rev_bit2) return 2;\n    return 3;\n  }\n\n  async get_chip_description(): Promise<string> {\n    const pkg_version = await this.get_pkg_version();\n    const chip_revision = await this.get_chip_revision();\n    const rev3 = (chip_revision == 3);\n    const single_core = (await this.read_efuse(this.EFUSE_BLK0, 3)) & (1 << 0); // CHIP_VER DIS_APP_CPU\n\n    let chip_name = {\n      0: single_core ? 'ESP32-S0WDQ6' : 'ESP32-D0WDQ6',\n      1: single_core ? 'ESP32-S0WD' : 'ESP32-D0WD',\n      2: 'ESP32-D2WD',\n      4: 'ESP32-U4WDH',\n      5: rev3 ? 'ESP32-PICO-V3' : 'ESP32-PICO-D4',\n      6: 'ESP32-PICO-V3-02',\n    }[pkg_version] || 'unknown ESP32';\n\n    if (chip_name.startsWith('ESP32-D0WD') && rev3) {\n      chip_name += '-V3';\n    }\n\n    return `${chip_name} (revision ${chip_revision})`;\n  }\n\n}\n\nclass ESP32StubLoader extends ESP32ROM {\n\n  FLASH_WRITE_SIZE = 0x4000;  // matches MAX_WRITE_BLOCK in stub_loader.c\n  STATUS_BYTES_LENGTH = 2;  // same as ESP8266, different to ESP32 ROM\n  IS_STUB = true;\n\n}\n","import { IStub } from '../ESPLoader';\n\nexport default {\n  'text': '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',\n  'text_start': 1073905664,\n  'entry': 1073907540,\n  'data': 'eNrjYPhrDwACXQFF',\n  'data_start': 1073622004,\n} as IStub;\n","import ESP32ROM from './ESP32ROM';\nimport ESP32S2Stub from './stubs/ESP32S2Stub';\n\nexport default class ESP32S2ROM extends ESP32ROM {\n\n  static CHIP_DETECT_MAGIC_VALUE = [0x000007c6];\n\n  CHIP_NAME = 'ESP32-S2';\n\n  EFUSE_BASE = 0x3f41A000;\n  EFUSE_BLK0 = this.EFUSE_BASE + 0x030;\n  EFUSE_BLK1 = this.EFUSE_BASE + 0x044;\n\n  STUB_CLASS = ESP32S2StubLoader;\n  STUB_CODE = ESP32S2Stub;\n\n  async get_pkg_version(): Promise<number> {\n    // EFUSE_BLK1, 117, 4, PKG_VERSION\n    const word3 = await this.read_efuse(this.EFUSE_BLK1, 3);\n    return (word3 >> 21) & 0x0F;\n  }\n\n  async get_chip_description(): Promise<string> {\n    return {\n      0: 'ESP32-S2',\n      1: 'ESP32-S2FH16',\n      2: 'ESP32-S2FH32',\n    }[await this.get_pkg_version()] || 'unknown ESP32-S2';\n  }\n\n}\n\nclass ESP32S2StubLoader extends ESP32S2ROM {\n\n  FLASH_WRITE_SIZE = 0x4000;  // matches MAX_WRITE_BLOCK in stub_loader.c\n  STATUS_BYTES_LENGTH = 2;  // same as ESP8266, different to ESP32 ROM\n  IS_STUB = true;\n\n}\n","import { IStub } from '../ESPLoader';\n\nexport default {\n  'text': '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',\n  'text_start': 1077411840,\n  'entry': 1077413488,\n  'data': 'eNrjcThhDwACwwFU',\n  'data_start': 1070164904,\n} as IStub;\n","import ESP32ROM from './ESP32ROM';\nimport ESP32C3Stub from './stubs/ESP32C3Stub';\n\nexport default class ESP32C3ROM extends ESP32ROM {\n\n  // Magic value for ESP32C3 eco 1+2 and ESP32C3 eco3 respectivly\n  static CHIP_DETECT_MAGIC_VALUE = [0x6921506f, 0x1b31506f];\n\n  CHIP_NAME = 'ESP32-C3';\n\n  EFUSE_BASE = 0x60008800;\n  EFUSE_BLK0 = this.EFUSE_BASE + 0x030;\n  EFUSE_BLK1 = this.EFUSE_BASE + 0x044;\n\n  STUB_CLASS = ESP32C3StubLoader;\n  STUB_CODE = ESP32C3Stub;\n\n  async get_pkg_version(): Promise<number> {\n    // EFUSE_BLK1, 117, 3, PKG_VERSION\n    const word3 = await this.read_efuse(this.EFUSE_BLK1, 3);\n    return (word3 >> 21) & 0x07;\n  }\n\n  async get_chip_revision(): Promise<number> {\n    // EFUSE_BLK1, 114, 3, WAFER_VERSION\n    const word3 = await this.read_efuse(this.EFUSE_BLK1, 3);\n    return (word3 >> 18) & 0x07;\n  }\n\n  async get_chip_description(): Promise<string> {\n    const chip_name = {\n      0: 'ESP32-C3',\n    }[await this.get_pkg_version()] || 'unknown ESP32-C3';\n\n    const chip_revision = await this.get_chip_revision();\n\n    return `${chip_name} (revision ${chip_revision})`;\n  }\n\n}\n\nclass ESP32C3StubLoader extends ESP32C3ROM {\n\n  FLASH_WRITE_SIZE = 0x4000;  // matches MAX_WRITE_BLOCK in stub_loader.c\n  STATUS_BYTES_LENGTH = 2;  // same as ESP8266, different to ESP32 ROM\n  IS_STUB = true;\n\n}\n","import EventEmitter from 'events';\nimport type { BaseBinding } from 'serialport';\nimport SerialPort from '@serialport/stream';\nimport WSABinding from 'serialport-binding-webserialapi';\n\nimport ESPLoader from './ESPLoader';\nimport ESP8266ROM from './ESP8266ROM';\nimport ESP32ROM from './ESP32ROM';\nimport ESP32S2ROM from './ESP32S2ROM';\nimport ESP32C3ROM from './ESP32C3ROM';\n\nimport { open, closeGracefully } from './utils/serial';\nimport sleep from './utils/sleep';\nimport { IFlashArgs, IConnectEvent } from './';\n\nSerialPort.Binding = WSABinding as unknown as BaseBinding;\n\nexport default class ESPTool extends EventEmitter {\n\n  serial: SerialPort | null = null;\n  loader: ESPLoader | null = null;\n\n  async open(path: string): Promise<void> {\n    if (this.serial && this.serial.isOpen) {\n      await closeGracefully(this.serial);\n      this.serial = null;\n      await sleep(200);\n    }\n\n    this.serial = new SerialPort(path, {\n      baudRate: 115200,\n      autoOpen: false,\n    });\n\n    try {\n      await open(this.serial);\n\n      const detector = new ESPLoader(this.serial);\n      await detector.connect();\n      const chip_magic_value = await detector.read_reg(ESPLoader.CHIP_DETECT_MAGIC_REG_ADDR);\n      for (const cls of [ESP8266ROM, ESP32ROM, ESP32S2ROM, ESP32C3ROM]) {\n        if (cls.CHIP_DETECT_MAGIC_VALUE.includes(chip_magic_value)) {\n          this.loader = new cls(this.serial);\n        }\n      }\n      detector.release();\n\n      if (!this.loader) {\n        console.warn('Unsupported chip');\n        closeGracefully(this.serial);\n        this.serial = null;\n        return;\n      }\n\n      this.serial.once('close', () => {\n        console.log('Connection closed');\n        this.emit('disconnect');\n      });\n\n      const chip_description = await this.loader.get_chip_description();\n      console.log(`Detected ${chip_description}`);\n      this.emit('connect', { chip_description } as IConnectEvent);\n\n      if (this.loader.STUB_CODE) {\n        const stub = await this.loader.run_stub();\n        this.loader.release();\n        this.loader = stub;\n      }\n    } catch (e) {\n      console.warn('Failed getting chip model', e);\n      if (this.serial && this.serial.isOpen) {\n        closeGracefully(this.serial);\n      }\n      this.serial = null;\n      throw e;\n    }\n  }\n\n  async flash(args: IFlashArgs): Promise<void> {\n    await this.loader?.flash(args, (progress) => this.emit('progress', progress));\n    await this.loader?.hard_reset();\n  }\n\n}\n","import ESPTool from './ESPTool';\nexport default ESPTool;\n\nexport interface IFlashArgs {\n  flashMode?: IFlashMode;\n  flashFreq?: IFlashFreq;\n  flashSize?: IFlashSize;\n  partitions: {\n    address: number;\n    image: Buffer;\n  }[];\n}\n\nexport type IFlashMode = 'keep' | 'qio' | 'qout' | 'dio' | 'dout';\nexport type IFlashFreq = 'keep' | string;\nexport type IFlashSize = 'keep' | string;\n\nexport interface IConnectEvent {\n  chip_description: string;\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from \"vue-property-decorator\";\n\nimport unpack from \"./unpack\";\nimport ESPTool, { IConnectEvent, IFlashArgs } from \"./esptool\";\nimport WSABinding from \"serialport-binding-webserialapi\";\n\nconst MAX_FILE_SIZE = 16 * 1024 * 1024;\n\nfunction hackWSABinding() {\n  // Hack WSABinding to force it to refresh ports\n  // after the current port is closed\n  // @ts-ignore\n  navigator.serial.getPorts = async () => [];\n  // @ts-ignore\n  WSABinding.internalBasePortsList = [];\n}\n\n@Component\nexport default class App extends Vue {\n  file: File | null = null;\n  progress: number | null = null;\n  imageSizes: number[] = [];\n  imageSizesTotal = 0;\n  busy = false;\n\n  flashArgs?: IFlashArgs;\n  esp?: ESPTool;\n\n  mounted(): void {\n    hackWSABinding();\n    this.esp = new ESPTool();\n\n    this.esp.on(\"connect\", ({ chip_description }: IConnectEvent) => {\n      console.log(`Connected: ${chip_description}`);\n      this.$message.success(`已连接：${chip_description}`);\n    });\n\n    this.esp.on(\"disconnect\", () => {\n      console.log(\"Disconnected\");\n    });\n\n    this.esp.on(\"progress\", ({ index, blocks_written, blocks_total }) => {\n      let success = 0;\n      for (let i = 0; i < index; i++) {\n        success += this.imageSizes[i];\n      }\n      const progress =\n        success + this.imageSizes[index] * (blocks_written / blocks_total);\n      this.progress = (progress / this.imageSizesTotal) * 100;\n    });\n  }\n\n  async handleFile(file: File): Promise<void> {\n    if (file.size >= MAX_FILE_SIZE) {\n      this.$message.error(\n        `文件过大: ${Math.round(file.size / 1024 / 1024)} MB`\n      );\n      return;\n    }\n\n    const flashArgs = await unpack(file);\n    if (flashArgs == null) {\n      this.$message.error(\"该文件不是一个合法的固件包\");\n      return;\n    }\n\n    this.file = file;\n    this.flashArgs = flashArgs;\n\n    this.imageSizes = flashArgs.partitions.map(({ image }) => image.length);\n    this.imageSizesTotal = this.imageSizes.reduce(\n      (total, size) => total + size,\n      0\n    );\n  }\n\n  async start(): Promise<void> {\n    this.busy = true;\n    this.progress = 0;\n    try {\n      await this.esp?.open(\"wsa://default\");\n    } catch (e) {\n      this.$message.error(\"设备打开失败\");\n      this.busy = false;\n      return;\n    }\n    try {\n      await this.esp?.flash(this.flashArgs!);\n    } catch (e) {\n      console.error(e);\n      this.$message.error(\"烧录失败\");\n    }\n    console.log(\"done\");\n    this.busy = false;\n  }\n\n  formatProgress(): string {\n    return this.progress! >= 100 ? \"完成\" : `${Math.floor(this.progress!)}%`;\n  }\n}\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--14-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--14-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=78d104f4&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\nimport Antd from 'ant-design-vue';\nimport 'ant-design-vue/dist/antd.css';\n\nimport App from './App.vue';\n\nVue.config.productionTip = false\n\nVue.use(Antd);\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app');\n","export default function pack(data: Buffer): Buffer {\n  const out = Buffer.alloc(data.length * 2 + 2);\n  out[0] = 0xC0;\n  let oi = 1;\n  for (let di = 0; di < data.length; di++) {\n    if (data[di] == 0xC0) {\n      out[oi] = 0xDB;\n      out[oi + 1] = 0xDC;\n      oi += 2;\n    } else if (data[di] == 0xDB) {\n      out[oi] = 0xDB;\n      out[oi + 1] = 0xDD;\n      oi += 2;\n    } else {\n      out[oi] = data[di];\n      oi += 1;\n    }\n  }\n  out[oi] = 0xC0;\n  return out.slice(0, oi + 1);\n}\n","import unzip from './unzip';\nimport { IFlashArgs, IFlashMode } from '@/esptool';\n\nexport default async function unpack(file: File): Promise<IFlashArgs | null> {\n  const entries = await unzip(file);\n\n  const { dir, content } = findFlashArgs(entries) || {};\n  if (!content) {\n    return null;\n  }\n\n  const args = Buffer.from(content)\n    .toString()\n    .replace(/\\n/g, ' ')\n    .split(' ')\n    .map(i => i.trim())\n    .filter(i => !!i);\n\n  const flashArgs: IFlashArgs = {\n    flashMode: 'qio',\n    partitions: [],\n  };\n\n  for (let i = 0; i < args.length - 1; i++) {\n    if (args[i] == '--flash_mode') {\n      flashArgs.flashMode = args[i + 1] as IFlashMode;\n    } else if (args[i].match(/^0x([A-Fa-f0-9]+)$/)) {\n      const address = parseInt(RegExp.$1, 16);\n      const key = `${dir}/${args[i + 1]}`;\n      if (entries[key]) {\n        flashArgs.partitions.push({ address, image: entries[key] });\n      }\n    } else if (args[i].match(/^([0-9]+)$/)) {\n      const address = parseInt(RegExp.$1);\n      const key = `${dir}/${args[i + 1]}`;\n      if (entries[key]) {\n        flashArgs.partitions.push({ address, image: entries[key] });\n      }\n    }\n  }\n\n  return flashArgs;\n}\n\nfunction findFlashArgs(entries: Record<string, Buffer>): { dir: string, content: Buffer } | null {\n  for (const name in entries) {\n    if (name.match(/^(.*)\\/flash_args$/)) {\n      return {\n        dir: RegExp.$1,\n        content: entries[name],\n      };\n    }\n  }\n  return null;\n}\n"],"sourceRoot":""}